// Rabia Algorithm


dtmc

const NUM_NODES = 3;
const QUORUM_SIZE = 2;
const BUF_SIZE = 3;
const MAX_TS = 2;
const QUEUE_SIZE = 2;
const LOG_SIZE = 3;
const MAX_ROUND = 2;

const p0_bc_cmd_stage = 0;
const p1_stage = 1;
const p2s_stage = 2;
const p2v_stage = 3;
const decided = 4;

const cmd_request = 0;
const cmd_proposal = 1;
const cmd_state = 2;
const cmd_vote = 3;
const NUM_CMD_TYPES = 4;

const INVALID=-1;
const BOT = -2;
const QUES_VOTE = -3;

const MIN_VOTE_VALUE=-3;
const MIN_TS_VALUE=-3;


module node0
    // states
	n0_stage : [0..5] init p0_bc_cmd_stage;
    /// p1 stage
    n0_seq : [0..LOG_SIZE] init 0;
    n0_pq_valid_0 : bool init true;
    n0_pq_ts_0 : [0..MAX_TS] init 1;
    n0_pq_valid_1 : bool init false;
    n0_pq_ts_1 : [0..MAX_TS] init 0;
    n0_log_ts_0 : [MIN_TS_VALUE..LOG_SIZE] init INVALID; 
    n0_log_ts_1 : [MIN_TS_VALUE..LOG_SIZE] init INVALID; 
    n0_log_ts_2 : [MIN_TS_VALUE..LOG_SIZE] init INVALID; 
    /// p2 stage
    n0_round_0 : [0..MAX_ROUND] init 0; 
    n0_my_proposal_0 : [0..MAX_TS] init 0;
    n0_round_1 : [0..MAX_ROUND] init 0; 
    n0_my_proposal_1 : [0..MAX_TS] init 0;
    n0_round_2 : [0..MAX_ROUND] init 0; 
    n0_my_proposal_2 : [0..MAX_TS] init 0;
    n0_proposal_0_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_state_ts_0_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_vote_ts_0_n0 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n0_proposal_0_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_state_ts_0_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_vote_ts_0_n1 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n0_proposal_0_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_state_ts_0_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_vote_ts_0_n2 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n0_proposal_1_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_state_ts_1_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_vote_ts_1_n0 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n0_proposal_1_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_state_ts_1_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_vote_ts_1_n1 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n0_proposal_1_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_state_ts_1_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_vote_ts_1_n2 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n0_proposal_2_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_state_ts_2_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_vote_ts_2_n0 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n0_proposal_2_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_state_ts_2_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_vote_ts_2_n1 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n0_proposal_2_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_state_ts_2_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n0_vote_ts_2_n2 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;

    // pkt to send
    n0_send_ready : bool init false; // ready means not yet sent
    n0_send_is_broadcast : bool init false;
    n0_send_type : [0..NUM_CMD_TYPES] init 0;
    n0_send_seq : [0..LOG_SIZE] init 0;
    n0_send_round : [0..MAX_ROUND] init 0;
    n0_send_cmd_ts : [MIN_TS_VALUE..MAX_TS] init 0;

    // pkt received
    n0_recv_ready : bool init false; // ready means received
    n0_recv_from : [0..NUM_NODES] init 0;
    n0_recv_type : [0..NUM_CMD_TYPES] init 0;
    n0_recv_seq : [0..LOG_SIZE] init 0;
    n0_recv_round : [0..MAX_ROUND] init 0;
    n0_recv_cmd_ts : [MIN_TS_VALUE..MAX_TS] init 0;
    
    // Try on each queue slot and execute if the slot has min ts
    [n0_propose_next_command_for_seq0_usingqueue0] n0_stage=p0_bc_cmd_stage & n0_send_ready=false & n0_seq=0 & n0_pq_valid_0=true & (!n0_pq_valid_0|n0_pq_ts_0>=n0_pq_ts_0)&(!n0_pq_valid_1|n0_pq_ts_1>=n0_pq_ts_0) ->         (n0_stage'=p1_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_proposal) & (n0_send_cmd_ts'=n0_pq_ts_0) & (n0_proposal_0_n0'=n0_pq_ts_0);
    [n0_propose_next_command_for_seq1_usingqueue0] n0_stage=p0_bc_cmd_stage & n0_send_ready=false & n0_seq=1 & n0_pq_valid_0=true & (!n0_pq_valid_0|n0_pq_ts_0>=n0_pq_ts_0)&(!n0_pq_valid_1|n0_pq_ts_1>=n0_pq_ts_0) ->         (n0_stage'=p1_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_proposal) & (n0_send_cmd_ts'=n0_pq_ts_0) & (n0_proposal_1_n0'=n0_pq_ts_0);
    [n0_propose_next_command_for_seq2_usingqueue0] n0_stage=p0_bc_cmd_stage & n0_send_ready=false & n0_seq=2 & n0_pq_valid_0=true & (!n0_pq_valid_0|n0_pq_ts_0>=n0_pq_ts_0)&(!n0_pq_valid_1|n0_pq_ts_1>=n0_pq_ts_0) ->         (n0_stage'=p1_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_proposal) & (n0_send_cmd_ts'=n0_pq_ts_0) & (n0_proposal_2_n0'=n0_pq_ts_0);
    [n0_propose_next_command_for_seq0_usingqueue1] n0_stage=p0_bc_cmd_stage & n0_send_ready=false & n0_seq=0 & n0_pq_valid_1=true & (!n0_pq_valid_0|n0_pq_ts_0>=n0_pq_ts_1)&(!n0_pq_valid_1|n0_pq_ts_1>=n0_pq_ts_1) ->         (n0_stage'=p1_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_proposal) & (n0_send_cmd_ts'=n0_pq_ts_1) & (n0_proposal_0_n0'=n0_pq_ts_1);
    [n0_propose_next_command_for_seq1_usingqueue1] n0_stage=p0_bc_cmd_stage & n0_send_ready=false & n0_seq=1 & n0_pq_valid_1=true & (!n0_pq_valid_0|n0_pq_ts_0>=n0_pq_ts_1)&(!n0_pq_valid_1|n0_pq_ts_1>=n0_pq_ts_1) ->         (n0_stage'=p1_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_proposal) & (n0_send_cmd_ts'=n0_pq_ts_1) & (n0_proposal_1_n0'=n0_pq_ts_1);
    [n0_propose_next_command_for_seq2_usingqueue1] n0_stage=p0_bc_cmd_stage & n0_send_ready=false & n0_seq=2 & n0_pq_valid_1=true & (!n0_pq_valid_0|n0_pq_ts_0>=n0_pq_ts_1)&(!n0_pq_valid_1|n0_pq_ts_1>=n0_pq_ts_1) ->         (n0_stage'=p1_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_proposal) & (n0_send_cmd_ts'=n0_pq_ts_1) & (n0_proposal_2_n0'=n0_pq_ts_1);
    
    // Process when a Proposal pkt is ready.
    [n0_drop_recv_if_proposal_in_p1] n0_stage=p1_stage & n0_recv_ready=true & n0_recv_type!=cmd_proposal -> (n0_recv_ready'=false);
    
    // Try to receive the proposal from node 0 for seq 0.
    [n0_process_proposal_from_n0_for_seq0] n0_stage=p1_stage & n0_recv_ready=true & n0_recv_from=0 & n0_recv_type=cmd_proposal & n0_recv_seq=0->         (n0_recv_ready'=false) & (n0_proposal_0_n0'=n0_recv_cmd_ts);
    // Try to assign the state using the proposal from node 0 for seq 0 when we have enough proposals.
    [n0_process_proposal_assign_state_0_using_n0] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_0_n0!=INVALID&n0_proposal_0_n1!=INVALID)|(n0_proposal_0_n0!=INVALID&n0_proposal_0_n2!=INVALID)|(n0_proposal_0_n1!=INVALID&n0_proposal_0_n2!=INVALID)) & ((n0_proposal_0_n1!=INVALID&n0_proposal_0_n1=n0_proposal_0_n0)|(n0_proposal_0_n2!=INVALID&n0_proposal_0_n2=n0_proposal_0_n0)) ->         (n0_state_ts_0_n0'=n0_proposal_0_n0) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_proposal_0_n0);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n0` here.)
    [n0_process_proposal_assign_state_0_using_n0] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_0_n0!=INVALID&n0_proposal_0_n1!=INVALID)|(n0_proposal_0_n0!=INVALID&n0_proposal_0_n2!=INVALID)|(n0_proposal_0_n1!=INVALID&n0_proposal_0_n2!=INVALID)) & !((n0_proposal_0_n1!=INVALID&n0_proposal_0_n1=n0_proposal_0_n0)|(n0_proposal_0_n2!=INVALID&n0_proposal_0_n2=n0_proposal_0_n0)) ->         (n0_state_ts_0_n0'=BOT) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 1 for seq 0.
    [n0_process_proposal_from_n1_for_seq0] n0_stage=p1_stage & n0_recv_ready=true & n0_recv_from=1 & n0_recv_type=cmd_proposal & n0_recv_seq=0->         (n0_recv_ready'=false) & (n0_proposal_0_n1'=n0_recv_cmd_ts);
    // Try to assign the state using the proposal from node 1 for seq 0 when we have enough proposals.
    [n0_process_proposal_assign_state_0_using_n1] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_0_n0!=INVALID&n0_proposal_0_n1!=INVALID)|(n0_proposal_0_n0!=INVALID&n0_proposal_0_n2!=INVALID)|(n0_proposal_0_n1!=INVALID&n0_proposal_0_n2!=INVALID)) & ((n0_proposal_0_n0!=INVALID&n0_proposal_0_n0=n0_proposal_0_n1)|(n0_proposal_0_n2!=INVALID&n0_proposal_0_n2=n0_proposal_0_n1)) ->         (n0_state_ts_0_n0'=n0_proposal_0_n1) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_proposal_0_n1);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n1` here.)
    [n0_process_proposal_assign_state_0_using_n1] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_0_n0!=INVALID&n0_proposal_0_n1!=INVALID)|(n0_proposal_0_n0!=INVALID&n0_proposal_0_n2!=INVALID)|(n0_proposal_0_n1!=INVALID&n0_proposal_0_n2!=INVALID)) & !((n0_proposal_0_n0!=INVALID&n0_proposal_0_n0=n0_proposal_0_n1)|(n0_proposal_0_n2!=INVALID&n0_proposal_0_n2=n0_proposal_0_n1)) ->         (n0_state_ts_0_n0'=BOT) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 2 for seq 0.
    [n0_process_proposal_from_n2_for_seq0] n0_stage=p1_stage & n0_recv_ready=true & n0_recv_from=2 & n0_recv_type=cmd_proposal & n0_recv_seq=0->         (n0_recv_ready'=false) & (n0_proposal_0_n2'=n0_recv_cmd_ts);
    // Try to assign the state using the proposal from node 2 for seq 0 when we have enough proposals.
    [n0_process_proposal_assign_state_0_using_n2] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_0_n0!=INVALID&n0_proposal_0_n1!=INVALID)|(n0_proposal_0_n0!=INVALID&n0_proposal_0_n2!=INVALID)|(n0_proposal_0_n1!=INVALID&n0_proposal_0_n2!=INVALID)) & ((n0_proposal_0_n0!=INVALID&n0_proposal_0_n0=n0_proposal_0_n2)|(n0_proposal_0_n1!=INVALID&n0_proposal_0_n1=n0_proposal_0_n2)) ->         (n0_state_ts_0_n0'=n0_proposal_0_n2) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_proposal_0_n2);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n2` here.)
    [n0_process_proposal_assign_state_0_using_n2] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_0_n0!=INVALID&n0_proposal_0_n1!=INVALID)|(n0_proposal_0_n0!=INVALID&n0_proposal_0_n2!=INVALID)|(n0_proposal_0_n1!=INVALID&n0_proposal_0_n2!=INVALID)) & !((n0_proposal_0_n0!=INVALID&n0_proposal_0_n0=n0_proposal_0_n2)|(n0_proposal_0_n1!=INVALID&n0_proposal_0_n1=n0_proposal_0_n2)) ->         (n0_state_ts_0_n0'=BOT) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 0 for seq 1.
    [n0_process_proposal_from_n0_for_seq1] n0_stage=p1_stage & n0_recv_ready=true & n0_recv_from=0 & n0_recv_type=cmd_proposal & n0_recv_seq=1->         (n0_recv_ready'=false) & (n0_proposal_1_n0'=n0_recv_cmd_ts);
    // Try to assign the state using the proposal from node 0 for seq 1 when we have enough proposals.
    [n0_process_proposal_assign_state_1_using_n0] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_1_n0!=INVALID&n0_proposal_1_n1!=INVALID)|(n0_proposal_1_n0!=INVALID&n0_proposal_1_n2!=INVALID)|(n0_proposal_1_n1!=INVALID&n0_proposal_1_n2!=INVALID)) & ((n0_proposal_1_n1!=INVALID&n0_proposal_1_n1=n0_proposal_1_n0)|(n0_proposal_1_n2!=INVALID&n0_proposal_1_n2=n0_proposal_1_n0)) ->         (n0_state_ts_1_n0'=n0_proposal_1_n0) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_proposal_1_n0);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n0` here.)
    [n0_process_proposal_assign_state_1_using_n0] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_1_n0!=INVALID&n0_proposal_1_n1!=INVALID)|(n0_proposal_1_n0!=INVALID&n0_proposal_1_n2!=INVALID)|(n0_proposal_1_n1!=INVALID&n0_proposal_1_n2!=INVALID)) & !((n0_proposal_1_n1!=INVALID&n0_proposal_1_n1=n0_proposal_1_n0)|(n0_proposal_1_n2!=INVALID&n0_proposal_1_n2=n0_proposal_1_n0)) ->         (n0_state_ts_1_n0'=BOT) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 1 for seq 1.
    [n0_process_proposal_from_n1_for_seq1] n0_stage=p1_stage & n0_recv_ready=true & n0_recv_from=1 & n0_recv_type=cmd_proposal & n0_recv_seq=1->         (n0_recv_ready'=false) & (n0_proposal_1_n1'=n0_recv_cmd_ts);
    // Try to assign the state using the proposal from node 1 for seq 1 when we have enough proposals.
    [n0_process_proposal_assign_state_1_using_n1] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_1_n0!=INVALID&n0_proposal_1_n1!=INVALID)|(n0_proposal_1_n0!=INVALID&n0_proposal_1_n2!=INVALID)|(n0_proposal_1_n1!=INVALID&n0_proposal_1_n2!=INVALID)) & ((n0_proposal_1_n0!=INVALID&n0_proposal_1_n0=n0_proposal_1_n1)|(n0_proposal_1_n2!=INVALID&n0_proposal_1_n2=n0_proposal_1_n1)) ->         (n0_state_ts_1_n0'=n0_proposal_1_n1) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_proposal_1_n1);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n1` here.)
    [n0_process_proposal_assign_state_1_using_n1] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_1_n0!=INVALID&n0_proposal_1_n1!=INVALID)|(n0_proposal_1_n0!=INVALID&n0_proposal_1_n2!=INVALID)|(n0_proposal_1_n1!=INVALID&n0_proposal_1_n2!=INVALID)) & !((n0_proposal_1_n0!=INVALID&n0_proposal_1_n0=n0_proposal_1_n1)|(n0_proposal_1_n2!=INVALID&n0_proposal_1_n2=n0_proposal_1_n1)) ->         (n0_state_ts_1_n0'=BOT) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 2 for seq 1.
    [n0_process_proposal_from_n2_for_seq1] n0_stage=p1_stage & n0_recv_ready=true & n0_recv_from=2 & n0_recv_type=cmd_proposal & n0_recv_seq=1->         (n0_recv_ready'=false) & (n0_proposal_1_n2'=n0_recv_cmd_ts);
    // Try to assign the state using the proposal from node 2 for seq 1 when we have enough proposals.
    [n0_process_proposal_assign_state_1_using_n2] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_1_n0!=INVALID&n0_proposal_1_n1!=INVALID)|(n0_proposal_1_n0!=INVALID&n0_proposal_1_n2!=INVALID)|(n0_proposal_1_n1!=INVALID&n0_proposal_1_n2!=INVALID)) & ((n0_proposal_1_n0!=INVALID&n0_proposal_1_n0=n0_proposal_1_n2)|(n0_proposal_1_n1!=INVALID&n0_proposal_1_n1=n0_proposal_1_n2)) ->         (n0_state_ts_1_n0'=n0_proposal_1_n2) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_proposal_1_n2);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n2` here.)
    [n0_process_proposal_assign_state_1_using_n2] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_1_n0!=INVALID&n0_proposal_1_n1!=INVALID)|(n0_proposal_1_n0!=INVALID&n0_proposal_1_n2!=INVALID)|(n0_proposal_1_n1!=INVALID&n0_proposal_1_n2!=INVALID)) & !((n0_proposal_1_n0!=INVALID&n0_proposal_1_n0=n0_proposal_1_n2)|(n0_proposal_1_n1!=INVALID&n0_proposal_1_n1=n0_proposal_1_n2)) ->         (n0_state_ts_1_n0'=BOT) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 0 for seq 2.
    [n0_process_proposal_from_n0_for_seq2] n0_stage=p1_stage & n0_recv_ready=true & n0_recv_from=0 & n0_recv_type=cmd_proposal & n0_recv_seq=2->         (n0_recv_ready'=false) & (n0_proposal_2_n0'=n0_recv_cmd_ts);
    // Try to assign the state using the proposal from node 0 for seq 2 when we have enough proposals.
    [n0_process_proposal_assign_state_2_using_n0] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_2_n0!=INVALID&n0_proposal_2_n1!=INVALID)|(n0_proposal_2_n0!=INVALID&n0_proposal_2_n2!=INVALID)|(n0_proposal_2_n1!=INVALID&n0_proposal_2_n2!=INVALID)) & ((n0_proposal_2_n1!=INVALID&n0_proposal_2_n1=n0_proposal_2_n0)|(n0_proposal_2_n2!=INVALID&n0_proposal_2_n2=n0_proposal_2_n0)) ->         (n0_state_ts_2_n0'=n0_proposal_2_n0) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_proposal_2_n0);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n0` here.)
    [n0_process_proposal_assign_state_2_using_n0] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_2_n0!=INVALID&n0_proposal_2_n1!=INVALID)|(n0_proposal_2_n0!=INVALID&n0_proposal_2_n2!=INVALID)|(n0_proposal_2_n1!=INVALID&n0_proposal_2_n2!=INVALID)) & !((n0_proposal_2_n1!=INVALID&n0_proposal_2_n1=n0_proposal_2_n0)|(n0_proposal_2_n2!=INVALID&n0_proposal_2_n2=n0_proposal_2_n0)) ->         (n0_state_ts_2_n0'=BOT) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 1 for seq 2.
    [n0_process_proposal_from_n1_for_seq2] n0_stage=p1_stage & n0_recv_ready=true & n0_recv_from=1 & n0_recv_type=cmd_proposal & n0_recv_seq=2->         (n0_recv_ready'=false) & (n0_proposal_2_n1'=n0_recv_cmd_ts);
    // Try to assign the state using the proposal from node 1 for seq 2 when we have enough proposals.
    [n0_process_proposal_assign_state_2_using_n1] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_2_n0!=INVALID&n0_proposal_2_n1!=INVALID)|(n0_proposal_2_n0!=INVALID&n0_proposal_2_n2!=INVALID)|(n0_proposal_2_n1!=INVALID&n0_proposal_2_n2!=INVALID)) & ((n0_proposal_2_n0!=INVALID&n0_proposal_2_n0=n0_proposal_2_n1)|(n0_proposal_2_n2!=INVALID&n0_proposal_2_n2=n0_proposal_2_n1)) ->         (n0_state_ts_2_n0'=n0_proposal_2_n1) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_proposal_2_n1);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n1` here.)
    [n0_process_proposal_assign_state_2_using_n1] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_2_n0!=INVALID&n0_proposal_2_n1!=INVALID)|(n0_proposal_2_n0!=INVALID&n0_proposal_2_n2!=INVALID)|(n0_proposal_2_n1!=INVALID&n0_proposal_2_n2!=INVALID)) & !((n0_proposal_2_n0!=INVALID&n0_proposal_2_n0=n0_proposal_2_n1)|(n0_proposal_2_n2!=INVALID&n0_proposal_2_n2=n0_proposal_2_n1)) ->         (n0_state_ts_2_n0'=BOT) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 2 for seq 2.
    [n0_process_proposal_from_n2_for_seq2] n0_stage=p1_stage & n0_recv_ready=true & n0_recv_from=2 & n0_recv_type=cmd_proposal & n0_recv_seq=2->         (n0_recv_ready'=false) & (n0_proposal_2_n2'=n0_recv_cmd_ts);
    // Try to assign the state using the proposal from node 2 for seq 2 when we have enough proposals.
    [n0_process_proposal_assign_state_2_using_n2] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_2_n0!=INVALID&n0_proposal_2_n1!=INVALID)|(n0_proposal_2_n0!=INVALID&n0_proposal_2_n2!=INVALID)|(n0_proposal_2_n1!=INVALID&n0_proposal_2_n2!=INVALID)) & ((n0_proposal_2_n0!=INVALID&n0_proposal_2_n0=n0_proposal_2_n2)|(n0_proposal_2_n1!=INVALID&n0_proposal_2_n1=n0_proposal_2_n2)) ->         (n0_state_ts_2_n0'=n0_proposal_2_n2) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_proposal_2_n2);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n2` here.)
    [n0_process_proposal_assign_state_2_using_n2] n0_stage=p1_stage & n0_send_ready=false & ((n0_proposal_2_n0!=INVALID&n0_proposal_2_n1!=INVALID)|(n0_proposal_2_n0!=INVALID&n0_proposal_2_n2!=INVALID)|(n0_proposal_2_n1!=INVALID&n0_proposal_2_n2!=INVALID)) & !((n0_proposal_2_n0!=INVALID&n0_proposal_2_n0=n0_proposal_2_n2)|(n0_proposal_2_n1!=INVALID&n0_proposal_2_n1=n0_proposal_2_n2)) ->         (n0_state_ts_2_n0'=BOT) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT);

    // Process when a State pkt is ready.
    [n0_drop_recv_if_state_in_p2s] n0_stage=p2s_stage & n0_recv_ready=true & n0_recv_type!=cmd_state -> (n0_recv_ready'=false);
    
    // Try to receive the state from node 0 for seq 0.
    [n0_process_state_from_n0_for_seq_0] n0_stage=p2s_stage & n0_recv_ready=true & n0_recv_from=0 & n0_recv_type=cmd_state & n0_recv_seq=0 ->         (n0_recv_ready'=false) & (n0_state_ts_0_n0'=n0_recv_cmd_ts);
    // Try to assign the state using the state from node 0 for seq 0 when we have enough states.
    [n0_process_state_assign_vote_0_using_n0] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n1!=INVALID)|(n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n2!=INVALID)|(n0_state_ts_0_n1!=INVALID&n0_state_ts_0_n2!=INVALID)) &  ((n0_state_ts_0_n1!=INVALID&n0_state_ts_0_n1=n0_state_ts_0_n0)|(n0_state_ts_0_n2!=INVALID&n0_state_ts_0_n2=n0_state_ts_0_n0)) ->         (n0_vote_ts_0_n0'=n0_state_ts_0_n0) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=n0_state_ts_0_n0);
    // We got enough states but no enough same states, thus assigning BOT.
    [n0_process_state_assign_vote_0_using_n0] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n1!=INVALID)|(n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n2!=INVALID)|(n0_state_ts_0_n1!=INVALID&n0_state_ts_0_n2!=INVALID)) & !((n0_state_ts_0_n1!=INVALID&n0_state_ts_0_n1=n0_state_ts_0_n0)|(n0_state_ts_0_n2!=INVALID&n0_state_ts_0_n2=n0_state_ts_0_n0)) ->         (n0_vote_ts_0_n0'=QUES_VOTE) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=BOT);
    // Try to receive the state from node 1 for seq 0.
    [n0_process_state_from_n1_for_seq_0] n0_stage=p2s_stage & n0_recv_ready=true & n0_recv_from=1 & n0_recv_type=cmd_state & n0_recv_seq=0 ->         (n0_recv_ready'=false) & (n0_state_ts_0_n1'=n0_recv_cmd_ts);
    // Try to assign the state using the state from node 1 for seq 0 when we have enough states.
    [n0_process_state_assign_vote_0_using_n1] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n1!=INVALID)|(n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n2!=INVALID)|(n0_state_ts_0_n1!=INVALID&n0_state_ts_0_n2!=INVALID)) &  ((n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n0=n0_state_ts_0_n1)|(n0_state_ts_0_n2!=INVALID&n0_state_ts_0_n2=n0_state_ts_0_n1)) ->         (n0_vote_ts_0_n0'=n0_state_ts_0_n1) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=n0_state_ts_0_n1);
    // We got enough states but no enough same states, thus assigning BOT.
    [n0_process_state_assign_vote_0_using_n1] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n1!=INVALID)|(n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n2!=INVALID)|(n0_state_ts_0_n1!=INVALID&n0_state_ts_0_n2!=INVALID)) & !((n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n0=n0_state_ts_0_n1)|(n0_state_ts_0_n2!=INVALID&n0_state_ts_0_n2=n0_state_ts_0_n1)) ->         (n0_vote_ts_0_n0'=QUES_VOTE) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=BOT);
    // Try to receive the state from node 2 for seq 0.
    [n0_process_state_from_n2_for_seq_0] n0_stage=p2s_stage & n0_recv_ready=true & n0_recv_from=2 & n0_recv_type=cmd_state & n0_recv_seq=0 ->         (n0_recv_ready'=false) & (n0_state_ts_0_n2'=n0_recv_cmd_ts);
    // Try to assign the state using the state from node 2 for seq 0 when we have enough states.
    [n0_process_state_assign_vote_0_using_n2] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n1!=INVALID)|(n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n2!=INVALID)|(n0_state_ts_0_n1!=INVALID&n0_state_ts_0_n2!=INVALID)) &  ((n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n0=n0_state_ts_0_n2)|(n0_state_ts_0_n1!=INVALID&n0_state_ts_0_n1=n0_state_ts_0_n2)) ->         (n0_vote_ts_0_n0'=n0_state_ts_0_n2) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=n0_state_ts_0_n2);
    // We got enough states but no enough same states, thus assigning BOT.
    [n0_process_state_assign_vote_0_using_n2] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n1!=INVALID)|(n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n2!=INVALID)|(n0_state_ts_0_n1!=INVALID&n0_state_ts_0_n2!=INVALID)) & !((n0_state_ts_0_n0!=INVALID&n0_state_ts_0_n0=n0_state_ts_0_n2)|(n0_state_ts_0_n1!=INVALID&n0_state_ts_0_n1=n0_state_ts_0_n2)) ->         (n0_vote_ts_0_n0'=QUES_VOTE) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=BOT);
    // Try to receive the state from node 0 for seq 1.
    [n0_process_state_from_n0_for_seq_1] n0_stage=p2s_stage & n0_recv_ready=true & n0_recv_from=0 & n0_recv_type=cmd_state & n0_recv_seq=1 ->         (n0_recv_ready'=false) & (n0_state_ts_1_n0'=n0_recv_cmd_ts);
    // Try to assign the state using the state from node 0 for seq 1 when we have enough states.
    [n0_process_state_assign_vote_1_using_n0] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n1!=INVALID)|(n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n2!=INVALID)|(n0_state_ts_1_n1!=INVALID&n0_state_ts_1_n2!=INVALID)) &  ((n0_state_ts_1_n1!=INVALID&n0_state_ts_1_n1=n0_state_ts_1_n0)|(n0_state_ts_1_n2!=INVALID&n0_state_ts_1_n2=n0_state_ts_1_n0)) ->         (n0_vote_ts_1_n0'=n0_state_ts_1_n0) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=n0_state_ts_1_n0);
    // We got enough states but no enough same states, thus assigning BOT.
    [n0_process_state_assign_vote_1_using_n0] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n1!=INVALID)|(n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n2!=INVALID)|(n0_state_ts_1_n1!=INVALID&n0_state_ts_1_n2!=INVALID)) & !((n0_state_ts_1_n1!=INVALID&n0_state_ts_1_n1=n0_state_ts_1_n0)|(n0_state_ts_1_n2!=INVALID&n0_state_ts_1_n2=n0_state_ts_1_n0)) ->         (n0_vote_ts_1_n0'=QUES_VOTE) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=BOT);
    // Try to receive the state from node 1 for seq 1.
    [n0_process_state_from_n1_for_seq_1] n0_stage=p2s_stage & n0_recv_ready=true & n0_recv_from=1 & n0_recv_type=cmd_state & n0_recv_seq=1 ->         (n0_recv_ready'=false) & (n0_state_ts_1_n1'=n0_recv_cmd_ts);
    // Try to assign the state using the state from node 1 for seq 1 when we have enough states.
    [n0_process_state_assign_vote_1_using_n1] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n1!=INVALID)|(n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n2!=INVALID)|(n0_state_ts_1_n1!=INVALID&n0_state_ts_1_n2!=INVALID)) &  ((n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n0=n0_state_ts_1_n1)|(n0_state_ts_1_n2!=INVALID&n0_state_ts_1_n2=n0_state_ts_1_n1)) ->         (n0_vote_ts_1_n0'=n0_state_ts_1_n1) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=n0_state_ts_1_n1);
    // We got enough states but no enough same states, thus assigning BOT.
    [n0_process_state_assign_vote_1_using_n1] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n1!=INVALID)|(n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n2!=INVALID)|(n0_state_ts_1_n1!=INVALID&n0_state_ts_1_n2!=INVALID)) & !((n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n0=n0_state_ts_1_n1)|(n0_state_ts_1_n2!=INVALID&n0_state_ts_1_n2=n0_state_ts_1_n1)) ->         (n0_vote_ts_1_n0'=QUES_VOTE) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=BOT);
    // Try to receive the state from node 2 for seq 1.
    [n0_process_state_from_n2_for_seq_1] n0_stage=p2s_stage & n0_recv_ready=true & n0_recv_from=2 & n0_recv_type=cmd_state & n0_recv_seq=1 ->         (n0_recv_ready'=false) & (n0_state_ts_1_n2'=n0_recv_cmd_ts);
    // Try to assign the state using the state from node 2 for seq 1 when we have enough states.
    [n0_process_state_assign_vote_1_using_n2] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n1!=INVALID)|(n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n2!=INVALID)|(n0_state_ts_1_n1!=INVALID&n0_state_ts_1_n2!=INVALID)) &  ((n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n0=n0_state_ts_1_n2)|(n0_state_ts_1_n1!=INVALID&n0_state_ts_1_n1=n0_state_ts_1_n2)) ->         (n0_vote_ts_1_n0'=n0_state_ts_1_n2) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=n0_state_ts_1_n2);
    // We got enough states but no enough same states, thus assigning BOT.
    [n0_process_state_assign_vote_1_using_n2] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n1!=INVALID)|(n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n2!=INVALID)|(n0_state_ts_1_n1!=INVALID&n0_state_ts_1_n2!=INVALID)) & !((n0_state_ts_1_n0!=INVALID&n0_state_ts_1_n0=n0_state_ts_1_n2)|(n0_state_ts_1_n1!=INVALID&n0_state_ts_1_n1=n0_state_ts_1_n2)) ->         (n0_vote_ts_1_n0'=QUES_VOTE) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=BOT);
    // Try to receive the state from node 0 for seq 2.
    [n0_process_state_from_n0_for_seq_2] n0_stage=p2s_stage & n0_recv_ready=true & n0_recv_from=0 & n0_recv_type=cmd_state & n0_recv_seq=2 ->         (n0_recv_ready'=false) & (n0_state_ts_2_n0'=n0_recv_cmd_ts);
    // Try to assign the state using the state from node 0 for seq 2 when we have enough states.
    [n0_process_state_assign_vote_2_using_n0] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n1!=INVALID)|(n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n2!=INVALID)|(n0_state_ts_2_n1!=INVALID&n0_state_ts_2_n2!=INVALID)) &  ((n0_state_ts_2_n1!=INVALID&n0_state_ts_2_n1=n0_state_ts_2_n0)|(n0_state_ts_2_n2!=INVALID&n0_state_ts_2_n2=n0_state_ts_2_n0)) ->         (n0_vote_ts_2_n0'=n0_state_ts_2_n0) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=n0_state_ts_2_n0);
    // We got enough states but no enough same states, thus assigning BOT.
    [n0_process_state_assign_vote_2_using_n0] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n1!=INVALID)|(n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n2!=INVALID)|(n0_state_ts_2_n1!=INVALID&n0_state_ts_2_n2!=INVALID)) & !((n0_state_ts_2_n1!=INVALID&n0_state_ts_2_n1=n0_state_ts_2_n0)|(n0_state_ts_2_n2!=INVALID&n0_state_ts_2_n2=n0_state_ts_2_n0)) ->         (n0_vote_ts_2_n0'=QUES_VOTE) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=BOT);
    // Try to receive the state from node 1 for seq 2.
    [n0_process_state_from_n1_for_seq_2] n0_stage=p2s_stage & n0_recv_ready=true & n0_recv_from=1 & n0_recv_type=cmd_state & n0_recv_seq=2 ->         (n0_recv_ready'=false) & (n0_state_ts_2_n1'=n0_recv_cmd_ts);
    // Try to assign the state using the state from node 1 for seq 2 when we have enough states.
    [n0_process_state_assign_vote_2_using_n1] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n1!=INVALID)|(n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n2!=INVALID)|(n0_state_ts_2_n1!=INVALID&n0_state_ts_2_n2!=INVALID)) &  ((n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n0=n0_state_ts_2_n1)|(n0_state_ts_2_n2!=INVALID&n0_state_ts_2_n2=n0_state_ts_2_n1)) ->         (n0_vote_ts_2_n0'=n0_state_ts_2_n1) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=n0_state_ts_2_n1);
    // We got enough states but no enough same states, thus assigning BOT.
    [n0_process_state_assign_vote_2_using_n1] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n1!=INVALID)|(n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n2!=INVALID)|(n0_state_ts_2_n1!=INVALID&n0_state_ts_2_n2!=INVALID)) & !((n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n0=n0_state_ts_2_n1)|(n0_state_ts_2_n2!=INVALID&n0_state_ts_2_n2=n0_state_ts_2_n1)) ->         (n0_vote_ts_2_n0'=QUES_VOTE) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=BOT);
    // Try to receive the state from node 2 for seq 2.
    [n0_process_state_from_n2_for_seq_2] n0_stage=p2s_stage & n0_recv_ready=true & n0_recv_from=2 & n0_recv_type=cmd_state & n0_recv_seq=2 ->         (n0_recv_ready'=false) & (n0_state_ts_2_n2'=n0_recv_cmd_ts);
    // Try to assign the state using the state from node 2 for seq 2 when we have enough states.
    [n0_process_state_assign_vote_2_using_n2] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n1!=INVALID)|(n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n2!=INVALID)|(n0_state_ts_2_n1!=INVALID&n0_state_ts_2_n2!=INVALID)) &  ((n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n0=n0_state_ts_2_n2)|(n0_state_ts_2_n1!=INVALID&n0_state_ts_2_n1=n0_state_ts_2_n2)) ->         (n0_vote_ts_2_n0'=n0_state_ts_2_n2) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=n0_state_ts_2_n2);
    // We got enough states but no enough same states, thus assigning BOT.
    [n0_process_state_assign_vote_2_using_n2] n0_stage=p2s_stage & n0_send_ready=false & ((n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n1!=INVALID)|(n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n2!=INVALID)|(n0_state_ts_2_n1!=INVALID&n0_state_ts_2_n2!=INVALID)) & !((n0_state_ts_2_n0!=INVALID&n0_state_ts_2_n0=n0_state_ts_2_n2)|(n0_state_ts_2_n1!=INVALID&n0_state_ts_2_n1=n0_state_ts_2_n2)) ->         (n0_vote_ts_2_n0'=QUES_VOTE) & (n0_stage'=p2v_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_vote) & (n0_send_cmd_ts'=BOT);

    // Process when a Vote pkt is ready.
    [n0_drop_recv_if_vote_in_p2v] n0_stage=p2v_stage & n0_recv_ready=true & n0_recv_type!=cmd_vote -> (n0_recv_ready'=false);
    
    // Try to receive the vote from node 0 for seq 0.
    [n0_process_vote_from_n0_for_seq0] n0_stage=p2v_stage & n0_recv_ready=true & n0_recv_from=0 & n0_recv_type=cmd_vote & n0_recv_seq=0 ->         (n0_recv_ready'=false) & (n0_vote_ts_0_n0'=n0_recv_cmd_ts);
    // Try to use the vote from node 0 for seq 0 when we have enough same votes, and return.
    [n0_process_vote_for_seq0_using_n0] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0!=QUES_VOTE) & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) &  ((n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1=n0_vote_ts_0_n0)|(n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2=n0_vote_ts_0_n0)) ->         (n0_log_ts_0'=n0_vote_ts_0_n0) & (n0_stage'=p1_stage) & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 0 that is not QUES_VOTE.
    [n0_process_vote_for_seq0_using_n0] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0!=QUES_VOTE) & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) & !((n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1=n0_vote_ts_0_n0)|(n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2=n0_vote_ts_0_n0)) ->         (n0_state_ts_0_n0'=n0_vote_ts_0_n0) & (n0_vote_ts_0_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_0_n0) & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n0_process_vote_for_seq0_using_n0] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) & n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0=QUES_VOTE&n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1=QUES_VOTE&n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2=QUES_VOTE ->         (n0_state_ts_0_n0'=BOT)                      & (n0_vote_ts_0_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT)                      & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    [n0_process_vote_for_seq0_using_n0] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) & n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0=QUES_VOTE&n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1=QUES_VOTE&n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2=QUES_VOTE ->         (n0_state_ts_0_n0'=n0_state_ts_0_n0) & (n0_vote_ts_0_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_0_n0) & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    // Try to receive the vote from node 1 for seq 0.
    [n0_process_vote_from_n1_for_seq0] n0_stage=p2v_stage & n0_recv_ready=true & n0_recv_from=1 & n0_recv_type=cmd_vote & n0_recv_seq=0 ->         (n0_recv_ready'=false) & (n0_vote_ts_0_n1'=n0_recv_cmd_ts);
    // Try to use the vote from node 1 for seq 0 when we have enough same votes, and return.
    [n0_process_vote_for_seq0_using_n1] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1!=QUES_VOTE) & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) &  ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0=n0_vote_ts_0_n1)|(n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2=n0_vote_ts_0_n1)) ->         (n0_log_ts_0'=n0_vote_ts_0_n1) & (n0_stage'=p1_stage) & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 1 that is not QUES_VOTE.
    [n0_process_vote_for_seq0_using_n1] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1!=QUES_VOTE) & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) & !((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0=n0_vote_ts_0_n1)|(n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2=n0_vote_ts_0_n1)) ->         (n0_state_ts_0_n0'=n0_vote_ts_0_n1) & (n0_vote_ts_0_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_0_n1) & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n0_process_vote_for_seq0_using_n1] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) & n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0=QUES_VOTE&n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1=QUES_VOTE&n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2=QUES_VOTE ->         (n0_state_ts_0_n0'=BOT)                      & (n0_vote_ts_0_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT)                      & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    [n0_process_vote_for_seq0_using_n1] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) & n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0=QUES_VOTE&n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1=QUES_VOTE&n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2=QUES_VOTE ->         (n0_state_ts_0_n0'=n0_state_ts_0_n1) & (n0_vote_ts_0_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_0_n1) & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    // Try to receive the vote from node 2 for seq 0.
    [n0_process_vote_from_n2_for_seq0] n0_stage=p2v_stage & n0_recv_ready=true & n0_recv_from=2 & n0_recv_type=cmd_vote & n0_recv_seq=0 ->         (n0_recv_ready'=false) & (n0_vote_ts_0_n2'=n0_recv_cmd_ts);
    // Try to use the vote from node 2 for seq 0 when we have enough same votes, and return.
    [n0_process_vote_for_seq0_using_n2] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2!=QUES_VOTE) & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) &  ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0=n0_vote_ts_0_n2)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1=n0_vote_ts_0_n2)) ->         (n0_log_ts_0'=n0_vote_ts_0_n2) & (n0_stage'=p1_stage) & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 2 that is not QUES_VOTE.
    [n0_process_vote_for_seq0_using_n2] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2!=QUES_VOTE) & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) & !((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0=n0_vote_ts_0_n2)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1=n0_vote_ts_0_n2)) ->         (n0_state_ts_0_n0'=n0_vote_ts_0_n2) & (n0_vote_ts_0_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_0_n2) & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n0_process_vote_for_seq0_using_n2] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) & n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0=QUES_VOTE&n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1=QUES_VOTE&n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2=QUES_VOTE ->         (n0_state_ts_0_n0'=BOT)                      & (n0_vote_ts_0_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT)                      & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    [n0_process_vote_for_seq0_using_n2] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n1!=INVALID)|(n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n2!=INVALID)|(n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n2!=INVALID)) & n0_vote_ts_0_n0!=INVALID&n0_vote_ts_0_n0=QUES_VOTE&n0_vote_ts_0_n1!=INVALID&n0_vote_ts_0_n1=QUES_VOTE&n0_vote_ts_0_n2!=INVALID&n0_vote_ts_0_n2=QUES_VOTE ->         (n0_state_ts_0_n0'=n0_state_ts_0_n2) & (n0_vote_ts_0_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_0_n2) & (n0_state_ts_0_n1'=INVALID)&(n0_vote_ts_0_n1'=INVALID)&(n0_state_ts_0_n2'=INVALID)&(n0_vote_ts_0_n2'=INVALID);
    // Try to receive the vote from node 0 for seq 1.
    [n0_process_vote_from_n0_for_seq1] n0_stage=p2v_stage & n0_recv_ready=true & n0_recv_from=0 & n0_recv_type=cmd_vote & n0_recv_seq=1 ->         (n0_recv_ready'=false) & (n0_vote_ts_1_n0'=n0_recv_cmd_ts);
    // Try to use the vote from node 0 for seq 1 when we have enough same votes, and return.
    [n0_process_vote_for_seq1_using_n0] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0!=QUES_VOTE) & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) &  ((n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1=n0_vote_ts_1_n0)|(n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2=n0_vote_ts_1_n0)) ->         (n0_log_ts_1'=n0_vote_ts_1_n0) & (n0_stage'=p1_stage) & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 0 that is not QUES_VOTE.
    [n0_process_vote_for_seq1_using_n0] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0!=QUES_VOTE) & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) & !((n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1=n0_vote_ts_1_n0)|(n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2=n0_vote_ts_1_n0)) ->         (n0_state_ts_1_n0'=n0_vote_ts_1_n0) & (n0_vote_ts_1_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_1_n0) & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n0_process_vote_for_seq1_using_n0] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) & n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0=QUES_VOTE&n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1=QUES_VOTE&n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2=QUES_VOTE ->         (n0_state_ts_1_n0'=BOT)                      & (n0_vote_ts_1_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT)                      & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    [n0_process_vote_for_seq1_using_n0] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) & n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0=QUES_VOTE&n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1=QUES_VOTE&n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2=QUES_VOTE ->         (n0_state_ts_1_n0'=n0_state_ts_1_n0) & (n0_vote_ts_1_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_1_n0) & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    // Try to receive the vote from node 1 for seq 1.
    [n0_process_vote_from_n1_for_seq1] n0_stage=p2v_stage & n0_recv_ready=true & n0_recv_from=1 & n0_recv_type=cmd_vote & n0_recv_seq=1 ->         (n0_recv_ready'=false) & (n0_vote_ts_1_n1'=n0_recv_cmd_ts);
    // Try to use the vote from node 1 for seq 1 when we have enough same votes, and return.
    [n0_process_vote_for_seq1_using_n1] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1!=QUES_VOTE) & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) &  ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0=n0_vote_ts_1_n1)|(n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2=n0_vote_ts_1_n1)) ->         (n0_log_ts_1'=n0_vote_ts_1_n1) & (n0_stage'=p1_stage) & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 1 that is not QUES_VOTE.
    [n0_process_vote_for_seq1_using_n1] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1!=QUES_VOTE) & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) & !((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0=n0_vote_ts_1_n1)|(n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2=n0_vote_ts_1_n1)) ->         (n0_state_ts_1_n0'=n0_vote_ts_1_n1) & (n0_vote_ts_1_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_1_n1) & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n0_process_vote_for_seq1_using_n1] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) & n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0=QUES_VOTE&n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1=QUES_VOTE&n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2=QUES_VOTE ->         (n0_state_ts_1_n0'=BOT)                      & (n0_vote_ts_1_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT)                      & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    [n0_process_vote_for_seq1_using_n1] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) & n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0=QUES_VOTE&n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1=QUES_VOTE&n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2=QUES_VOTE ->         (n0_state_ts_1_n0'=n0_state_ts_1_n1) & (n0_vote_ts_1_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_1_n1) & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    // Try to receive the vote from node 2 for seq 1.
    [n0_process_vote_from_n2_for_seq1] n0_stage=p2v_stage & n0_recv_ready=true & n0_recv_from=2 & n0_recv_type=cmd_vote & n0_recv_seq=1 ->         (n0_recv_ready'=false) & (n0_vote_ts_1_n2'=n0_recv_cmd_ts);
    // Try to use the vote from node 2 for seq 1 when we have enough same votes, and return.
    [n0_process_vote_for_seq1_using_n2] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2!=QUES_VOTE) & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) &  ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0=n0_vote_ts_1_n2)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1=n0_vote_ts_1_n2)) ->         (n0_log_ts_1'=n0_vote_ts_1_n2) & (n0_stage'=p1_stage) & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 2 that is not QUES_VOTE.
    [n0_process_vote_for_seq1_using_n2] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2!=QUES_VOTE) & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) & !((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0=n0_vote_ts_1_n2)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1=n0_vote_ts_1_n2)) ->         (n0_state_ts_1_n0'=n0_vote_ts_1_n2) & (n0_vote_ts_1_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_1_n2) & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n0_process_vote_for_seq1_using_n2] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) & n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0=QUES_VOTE&n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1=QUES_VOTE&n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2=QUES_VOTE ->         (n0_state_ts_1_n0'=BOT)                      & (n0_vote_ts_1_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT)                      & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    [n0_process_vote_for_seq1_using_n2] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n1!=INVALID)|(n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n2!=INVALID)|(n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n2!=INVALID)) & n0_vote_ts_1_n0!=INVALID&n0_vote_ts_1_n0=QUES_VOTE&n0_vote_ts_1_n1!=INVALID&n0_vote_ts_1_n1=QUES_VOTE&n0_vote_ts_1_n2!=INVALID&n0_vote_ts_1_n2=QUES_VOTE ->         (n0_state_ts_1_n0'=n0_state_ts_1_n2) & (n0_vote_ts_1_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_1_n2) & (n0_state_ts_1_n1'=INVALID)&(n0_vote_ts_1_n1'=INVALID)&(n0_state_ts_1_n2'=INVALID)&(n0_vote_ts_1_n2'=INVALID);
    // Try to receive the vote from node 0 for seq 2.
    [n0_process_vote_from_n0_for_seq2] n0_stage=p2v_stage & n0_recv_ready=true & n0_recv_from=0 & n0_recv_type=cmd_vote & n0_recv_seq=2 ->         (n0_recv_ready'=false) & (n0_vote_ts_2_n0'=n0_recv_cmd_ts);
    // Try to use the vote from node 0 for seq 2 when we have enough same votes, and return.
    [n0_process_vote_for_seq2_using_n0] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0!=QUES_VOTE) & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) &  ((n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1=n0_vote_ts_2_n0)|(n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2=n0_vote_ts_2_n0)) ->         (n0_log_ts_2'=n0_vote_ts_2_n0) & (n0_stage'=p1_stage) & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 0 that is not QUES_VOTE.
    [n0_process_vote_for_seq2_using_n0] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0!=QUES_VOTE) & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) & !((n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1=n0_vote_ts_2_n0)|(n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2=n0_vote_ts_2_n0)) ->         (n0_state_ts_2_n0'=n0_vote_ts_2_n0) & (n0_vote_ts_2_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_2_n0) & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n0_process_vote_for_seq2_using_n0] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) & n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0=QUES_VOTE&n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1=QUES_VOTE&n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2=QUES_VOTE ->         (n0_state_ts_2_n0'=BOT)                      & (n0_vote_ts_2_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT)                      & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);
    [n0_process_vote_for_seq2_using_n0] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) & n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0=QUES_VOTE&n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1=QUES_VOTE&n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2=QUES_VOTE ->         (n0_state_ts_2_n0'=n0_state_ts_2_n0) & (n0_vote_ts_2_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_2_n0) & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);
    // Try to receive the vote from node 1 for seq 2.
    [n0_process_vote_from_n1_for_seq2] n0_stage=p2v_stage & n0_recv_ready=true & n0_recv_from=1 & n0_recv_type=cmd_vote & n0_recv_seq=2 ->         (n0_recv_ready'=false) & (n0_vote_ts_2_n1'=n0_recv_cmd_ts);
    // Try to use the vote from node 1 for seq 2 when we have enough same votes, and return.
    [n0_process_vote_for_seq2_using_n1] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1!=QUES_VOTE) & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) &  ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0=n0_vote_ts_2_n1)|(n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2=n0_vote_ts_2_n1)) ->         (n0_log_ts_2'=n0_vote_ts_2_n1) & (n0_stage'=p1_stage) & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 1 that is not QUES_VOTE.
    [n0_process_vote_for_seq2_using_n1] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1!=QUES_VOTE) & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) & !((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0=n0_vote_ts_2_n1)|(n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2=n0_vote_ts_2_n1)) ->         (n0_state_ts_2_n0'=n0_vote_ts_2_n1) & (n0_vote_ts_2_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_2_n1) & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n0_process_vote_for_seq2_using_n1] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) & n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0=QUES_VOTE&n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1=QUES_VOTE&n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2=QUES_VOTE ->         (n0_state_ts_2_n0'=BOT)                      & (n0_vote_ts_2_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT)                      & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);
    [n0_process_vote_for_seq2_using_n1] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) & n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0=QUES_VOTE&n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1=QUES_VOTE&n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2=QUES_VOTE ->         (n0_state_ts_2_n0'=n0_state_ts_2_n1) & (n0_vote_ts_2_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_2_n1) & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);
    // Try to receive the vote from node 2 for seq 2.
    [n0_process_vote_from_n2_for_seq2] n0_stage=p2v_stage & n0_recv_ready=true & n0_recv_from=2 & n0_recv_type=cmd_vote & n0_recv_seq=2 ->         (n0_recv_ready'=false) & (n0_vote_ts_2_n2'=n0_recv_cmd_ts);
    // Try to use the vote from node 2 for seq 2 when we have enough same votes, and return.
    [n0_process_vote_for_seq2_using_n2] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2!=QUES_VOTE) & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) &  ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0=n0_vote_ts_2_n2)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1=n0_vote_ts_2_n2)) ->         (n0_log_ts_2'=n0_vote_ts_2_n2) & (n0_stage'=p1_stage) & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 2 that is not QUES_VOTE.
    [n0_process_vote_for_seq2_using_n2] n0_stage=p2v_stage & n0_send_ready=false & (n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2!=QUES_VOTE) & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) & !((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0=n0_vote_ts_2_n2)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1=n0_vote_ts_2_n2)) ->         (n0_state_ts_2_n0'=n0_vote_ts_2_n2) & (n0_vote_ts_2_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_2_n2) & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n0_process_vote_for_seq2_using_n2] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) & n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0=QUES_VOTE&n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1=QUES_VOTE&n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2=QUES_VOTE ->         (n0_state_ts_2_n0'=BOT)                      & (n0_vote_ts_2_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=BOT)                      & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);
    [n0_process_vote_for_seq2_using_n2] n0_stage=p2v_stage & n0_send_ready=false & ((n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n1!=INVALID)|(n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n2!=INVALID)|(n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n2!=INVALID)) & n0_vote_ts_2_n0!=INVALID&n0_vote_ts_2_n0=QUES_VOTE&n0_vote_ts_2_n1!=INVALID&n0_vote_ts_2_n1=QUES_VOTE&n0_vote_ts_2_n2!=INVALID&n0_vote_ts_2_n2=QUES_VOTE ->         (n0_state_ts_2_n0'=n0_state_ts_2_n2) & (n0_vote_ts_2_n0'=INVALID) & (n0_stage'=p2s_stage) & (n0_send_ready'=true) & (n0_send_is_broadcast'=true) & (n0_send_type'=cmd_state) & (n0_send_cmd_ts'=n0_state_ts_2_n2) & (n0_state_ts_2_n1'=INVALID)&(n0_vote_ts_2_n1'=INVALID)&(n0_state_ts_2_n2'=INVALID)&(n0_vote_ts_2_n2'=INVALID);

    // Send when a pkt is ready; Recv when a pkt is ready.
    [recv_10_0] n0_recv_ready=false ->         (n0_recv_ready'=true) & (n0_recv_from'=1) & (n0_recv_type'=w10_pkt_type_0) & (n0_recv_seq'=w10_pkt_seq_0) & (n0_recv_round'=w10_pkt_round_0) & (n0_recv_cmd_ts'=w10_pkt_cmd_ts_0);
    [send_01_0] n0_send_ready=true & n0_send_is_broadcast=false -> (n0_send_ready'=false);
    [recv_20_0] n0_recv_ready=false ->         (n0_recv_ready'=true) & (n0_recv_from'=2) & (n0_recv_type'=w20_pkt_type_0) & (n0_recv_seq'=w20_pkt_seq_0) & (n0_recv_round'=w20_pkt_round_0) & (n0_recv_cmd_ts'=w20_pkt_cmd_ts_0);
    [send_02_0] n0_send_ready=true & n0_send_is_broadcast=false -> (n0_send_ready'=false);
    [recv_10_1] n0_recv_ready=false ->         (n0_recv_ready'=true) & (n0_recv_from'=1) & (n0_recv_type'=w10_pkt_type_1) & (n0_recv_seq'=w10_pkt_seq_1) & (n0_recv_round'=w10_pkt_round_1) & (n0_recv_cmd_ts'=w10_pkt_cmd_ts_1);
    [send_01_1] n0_send_ready=true & n0_send_is_broadcast=false -> (n0_send_ready'=false);
    [recv_20_1] n0_recv_ready=false ->         (n0_recv_ready'=true) & (n0_recv_from'=2) & (n0_recv_type'=w20_pkt_type_1) & (n0_recv_seq'=w20_pkt_seq_1) & (n0_recv_round'=w20_pkt_round_1) & (n0_recv_cmd_ts'=w20_pkt_cmd_ts_1);
    [send_02_1] n0_send_ready=true & n0_send_is_broadcast=false -> (n0_send_ready'=false);
    [recv_10_2] n0_recv_ready=false ->         (n0_recv_ready'=true) & (n0_recv_from'=1) & (n0_recv_type'=w10_pkt_type_2) & (n0_recv_seq'=w10_pkt_seq_2) & (n0_recv_round'=w10_pkt_round_2) & (n0_recv_cmd_ts'=w10_pkt_cmd_ts_2);
    [send_01_2] n0_send_ready=true & n0_send_is_broadcast=false -> (n0_send_ready'=false);
    [recv_20_2] n0_recv_ready=false ->         (n0_recv_ready'=true) & (n0_recv_from'=2) & (n0_recv_type'=w20_pkt_type_2) & (n0_recv_seq'=w20_pkt_seq_2) & (n0_recv_round'=w20_pkt_round_2) & (n0_recv_cmd_ts'=w20_pkt_cmd_ts_2);
    [send_02_2] n0_send_ready=true & n0_send_is_broadcast=false -> (n0_send_ready'=false);
    [n0_send_broadcast] n0_send_ready=true & n0_send_is_broadcast=true -> (n0_send_ready'=false);
    [n0_send_broadcast] n0_send_ready=true & n0_send_is_broadcast=true -> (n0_send_ready'=false);
    [n0_send_broadcast] n0_send_ready=true & n0_send_is_broadcast=true -> (n0_send_ready'=false);

endmodule


module node1
    // states
	n1_stage : [0..5] init p0_bc_cmd_stage;
    /// p1 stage
    n1_seq : [0..LOG_SIZE] init 0;
    n1_pq_valid_0 : bool init true;
    n1_pq_ts_0 : [0..MAX_TS] init 1;
    n1_pq_valid_1 : bool init false;
    n1_pq_ts_1 : [0..MAX_TS] init 0;
    n1_log_ts_0 : [MIN_TS_VALUE..LOG_SIZE] init INVALID; 
    n1_log_ts_1 : [MIN_TS_VALUE..LOG_SIZE] init INVALID; 
    n1_log_ts_2 : [MIN_TS_VALUE..LOG_SIZE] init INVALID; 
    /// p2 stage
    n1_round_0 : [0..MAX_ROUND] init 0; 
    n1_my_proposal_0 : [0..MAX_TS] init 0;
    n1_round_1 : [0..MAX_ROUND] init 0; 
    n1_my_proposal_1 : [0..MAX_TS] init 0;
    n1_round_2 : [0..MAX_ROUND] init 0; 
    n1_my_proposal_2 : [0..MAX_TS] init 0;
    n1_proposal_0_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_state_ts_0_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_vote_ts_0_n0 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n1_proposal_0_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_state_ts_0_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_vote_ts_0_n1 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n1_proposal_0_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_state_ts_0_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_vote_ts_0_n2 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n1_proposal_1_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_state_ts_1_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_vote_ts_1_n0 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n1_proposal_1_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_state_ts_1_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_vote_ts_1_n1 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n1_proposal_1_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_state_ts_1_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_vote_ts_1_n2 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n1_proposal_2_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_state_ts_2_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_vote_ts_2_n0 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n1_proposal_2_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_state_ts_2_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_vote_ts_2_n1 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n1_proposal_2_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_state_ts_2_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n1_vote_ts_2_n2 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;

    // pkt to send
    n1_send_ready : bool init false; // ready means not yet sent
    n1_send_is_broadcast : bool init false;
    n1_send_type : [0..NUM_CMD_TYPES] init 0;
    n1_send_seq : [0..LOG_SIZE] init 0;
    n1_send_round : [0..MAX_ROUND] init 0;
    n1_send_cmd_ts : [MIN_TS_VALUE..MAX_TS] init 0;

    // pkt received
    n1_recv_ready : bool init false; // ready means received
    n1_recv_from : [0..NUM_NODES] init 0;
    n1_recv_type : [0..NUM_CMD_TYPES] init 0;
    n1_recv_seq : [0..LOG_SIZE] init 0;
    n1_recv_round : [0..MAX_ROUND] init 0;
    n1_recv_cmd_ts : [MIN_TS_VALUE..MAX_TS] init 0;
    
    // Try on each queue slot and execute if the slot has min ts
    [n1_propose_next_command_for_seq0_usingqueue0] n1_stage=p0_bc_cmd_stage & n1_send_ready=false & n1_seq=0 & n1_pq_valid_0=true & (!n1_pq_valid_0|n1_pq_ts_0>=n1_pq_ts_0)&(!n1_pq_valid_1|n1_pq_ts_1>=n1_pq_ts_0) ->         (n1_stage'=p1_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_proposal) & (n1_send_cmd_ts'=n1_pq_ts_0) & (n1_proposal_0_n1'=n1_pq_ts_0);
    [n1_propose_next_command_for_seq1_usingqueue0] n1_stage=p0_bc_cmd_stage & n1_send_ready=false & n1_seq=1 & n1_pq_valid_0=true & (!n1_pq_valid_0|n1_pq_ts_0>=n1_pq_ts_0)&(!n1_pq_valid_1|n1_pq_ts_1>=n1_pq_ts_0) ->         (n1_stage'=p1_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_proposal) & (n1_send_cmd_ts'=n1_pq_ts_0) & (n1_proposal_1_n1'=n1_pq_ts_0);
    [n1_propose_next_command_for_seq2_usingqueue0] n1_stage=p0_bc_cmd_stage & n1_send_ready=false & n1_seq=2 & n1_pq_valid_0=true & (!n1_pq_valid_0|n1_pq_ts_0>=n1_pq_ts_0)&(!n1_pq_valid_1|n1_pq_ts_1>=n1_pq_ts_0) ->         (n1_stage'=p1_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_proposal) & (n1_send_cmd_ts'=n1_pq_ts_0) & (n1_proposal_2_n1'=n1_pq_ts_0);
    [n1_propose_next_command_for_seq0_usingqueue1] n1_stage=p0_bc_cmd_stage & n1_send_ready=false & n1_seq=0 & n1_pq_valid_1=true & (!n1_pq_valid_0|n1_pq_ts_0>=n1_pq_ts_1)&(!n1_pq_valid_1|n1_pq_ts_1>=n1_pq_ts_1) ->         (n1_stage'=p1_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_proposal) & (n1_send_cmd_ts'=n1_pq_ts_1) & (n1_proposal_0_n1'=n1_pq_ts_1);
    [n1_propose_next_command_for_seq1_usingqueue1] n1_stage=p0_bc_cmd_stage & n1_send_ready=false & n1_seq=1 & n1_pq_valid_1=true & (!n1_pq_valid_0|n1_pq_ts_0>=n1_pq_ts_1)&(!n1_pq_valid_1|n1_pq_ts_1>=n1_pq_ts_1) ->         (n1_stage'=p1_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_proposal) & (n1_send_cmd_ts'=n1_pq_ts_1) & (n1_proposal_1_n1'=n1_pq_ts_1);
    [n1_propose_next_command_for_seq2_usingqueue1] n1_stage=p0_bc_cmd_stage & n1_send_ready=false & n1_seq=2 & n1_pq_valid_1=true & (!n1_pq_valid_0|n1_pq_ts_0>=n1_pq_ts_1)&(!n1_pq_valid_1|n1_pq_ts_1>=n1_pq_ts_1) ->         (n1_stage'=p1_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_proposal) & (n1_send_cmd_ts'=n1_pq_ts_1) & (n1_proposal_2_n1'=n1_pq_ts_1);
    
    // Process when a Proposal pkt is ready.
    [n1_drop_recv_if_proposal_in_p1] n1_stage=p1_stage & n1_recv_ready=true & n1_recv_type!=cmd_proposal -> (n1_recv_ready'=false);
    
    // Try to receive the proposal from node 0 for seq 0.
    [n1_process_proposal_from_n0_for_seq0] n1_stage=p1_stage & n1_recv_ready=true & n1_recv_from=0 & n1_recv_type=cmd_proposal & n1_recv_seq=0->         (n1_recv_ready'=false) & (n1_proposal_0_n0'=n1_recv_cmd_ts);
    // Try to assign the state using the proposal from node 0 for seq 0 when we have enough proposals.
    [n1_process_proposal_assign_state_0_using_n0] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_0_n0!=INVALID&n1_proposal_0_n1!=INVALID)|(n1_proposal_0_n0!=INVALID&n1_proposal_0_n2!=INVALID)|(n1_proposal_0_n1!=INVALID&n1_proposal_0_n2!=INVALID)) & ((n1_proposal_0_n1!=INVALID&n1_proposal_0_n1=n1_proposal_0_n0)|(n1_proposal_0_n2!=INVALID&n1_proposal_0_n2=n1_proposal_0_n0)) ->         (n1_state_ts_0_n1'=n1_proposal_0_n0) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_proposal_0_n0);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n0` here.)
    [n1_process_proposal_assign_state_0_using_n0] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_0_n0!=INVALID&n1_proposal_0_n1!=INVALID)|(n1_proposal_0_n0!=INVALID&n1_proposal_0_n2!=INVALID)|(n1_proposal_0_n1!=INVALID&n1_proposal_0_n2!=INVALID)) & !((n1_proposal_0_n1!=INVALID&n1_proposal_0_n1=n1_proposal_0_n0)|(n1_proposal_0_n2!=INVALID&n1_proposal_0_n2=n1_proposal_0_n0)) ->         (n1_state_ts_0_n1'=BOT) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 1 for seq 0.
    [n1_process_proposal_from_n1_for_seq0] n1_stage=p1_stage & n1_recv_ready=true & n1_recv_from=1 & n1_recv_type=cmd_proposal & n1_recv_seq=0->         (n1_recv_ready'=false) & (n1_proposal_0_n1'=n1_recv_cmd_ts);
    // Try to assign the state using the proposal from node 1 for seq 0 when we have enough proposals.
    [n1_process_proposal_assign_state_0_using_n1] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_0_n0!=INVALID&n1_proposal_0_n1!=INVALID)|(n1_proposal_0_n0!=INVALID&n1_proposal_0_n2!=INVALID)|(n1_proposal_0_n1!=INVALID&n1_proposal_0_n2!=INVALID)) & ((n1_proposal_0_n0!=INVALID&n1_proposal_0_n0=n1_proposal_0_n1)|(n1_proposal_0_n2!=INVALID&n1_proposal_0_n2=n1_proposal_0_n1)) ->         (n1_state_ts_0_n1'=n1_proposal_0_n1) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_proposal_0_n1);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n1` here.)
    [n1_process_proposal_assign_state_0_using_n1] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_0_n0!=INVALID&n1_proposal_0_n1!=INVALID)|(n1_proposal_0_n0!=INVALID&n1_proposal_0_n2!=INVALID)|(n1_proposal_0_n1!=INVALID&n1_proposal_0_n2!=INVALID)) & !((n1_proposal_0_n0!=INVALID&n1_proposal_0_n0=n1_proposal_0_n1)|(n1_proposal_0_n2!=INVALID&n1_proposal_0_n2=n1_proposal_0_n1)) ->         (n1_state_ts_0_n1'=BOT) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 2 for seq 0.
    [n1_process_proposal_from_n2_for_seq0] n1_stage=p1_stage & n1_recv_ready=true & n1_recv_from=2 & n1_recv_type=cmd_proposal & n1_recv_seq=0->         (n1_recv_ready'=false) & (n1_proposal_0_n2'=n1_recv_cmd_ts);
    // Try to assign the state using the proposal from node 2 for seq 0 when we have enough proposals.
    [n1_process_proposal_assign_state_0_using_n2] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_0_n0!=INVALID&n1_proposal_0_n1!=INVALID)|(n1_proposal_0_n0!=INVALID&n1_proposal_0_n2!=INVALID)|(n1_proposal_0_n1!=INVALID&n1_proposal_0_n2!=INVALID)) & ((n1_proposal_0_n0!=INVALID&n1_proposal_0_n0=n1_proposal_0_n2)|(n1_proposal_0_n1!=INVALID&n1_proposal_0_n1=n1_proposal_0_n2)) ->         (n1_state_ts_0_n1'=n1_proposal_0_n2) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_proposal_0_n2);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n2` here.)
    [n1_process_proposal_assign_state_0_using_n2] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_0_n0!=INVALID&n1_proposal_0_n1!=INVALID)|(n1_proposal_0_n0!=INVALID&n1_proposal_0_n2!=INVALID)|(n1_proposal_0_n1!=INVALID&n1_proposal_0_n2!=INVALID)) & !((n1_proposal_0_n0!=INVALID&n1_proposal_0_n0=n1_proposal_0_n2)|(n1_proposal_0_n1!=INVALID&n1_proposal_0_n1=n1_proposal_0_n2)) ->         (n1_state_ts_0_n1'=BOT) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 0 for seq 1.
    [n1_process_proposal_from_n0_for_seq1] n1_stage=p1_stage & n1_recv_ready=true & n1_recv_from=0 & n1_recv_type=cmd_proposal & n1_recv_seq=1->         (n1_recv_ready'=false) & (n1_proposal_1_n0'=n1_recv_cmd_ts);
    // Try to assign the state using the proposal from node 0 for seq 1 when we have enough proposals.
    [n1_process_proposal_assign_state_1_using_n0] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_1_n0!=INVALID&n1_proposal_1_n1!=INVALID)|(n1_proposal_1_n0!=INVALID&n1_proposal_1_n2!=INVALID)|(n1_proposal_1_n1!=INVALID&n1_proposal_1_n2!=INVALID)) & ((n1_proposal_1_n1!=INVALID&n1_proposal_1_n1=n1_proposal_1_n0)|(n1_proposal_1_n2!=INVALID&n1_proposal_1_n2=n1_proposal_1_n0)) ->         (n1_state_ts_1_n1'=n1_proposal_1_n0) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_proposal_1_n0);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n0` here.)
    [n1_process_proposal_assign_state_1_using_n0] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_1_n0!=INVALID&n1_proposal_1_n1!=INVALID)|(n1_proposal_1_n0!=INVALID&n1_proposal_1_n2!=INVALID)|(n1_proposal_1_n1!=INVALID&n1_proposal_1_n2!=INVALID)) & !((n1_proposal_1_n1!=INVALID&n1_proposal_1_n1=n1_proposal_1_n0)|(n1_proposal_1_n2!=INVALID&n1_proposal_1_n2=n1_proposal_1_n0)) ->         (n1_state_ts_1_n1'=BOT) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 1 for seq 1.
    [n1_process_proposal_from_n1_for_seq1] n1_stage=p1_stage & n1_recv_ready=true & n1_recv_from=1 & n1_recv_type=cmd_proposal & n1_recv_seq=1->         (n1_recv_ready'=false) & (n1_proposal_1_n1'=n1_recv_cmd_ts);
    // Try to assign the state using the proposal from node 1 for seq 1 when we have enough proposals.
    [n1_process_proposal_assign_state_1_using_n1] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_1_n0!=INVALID&n1_proposal_1_n1!=INVALID)|(n1_proposal_1_n0!=INVALID&n1_proposal_1_n2!=INVALID)|(n1_proposal_1_n1!=INVALID&n1_proposal_1_n2!=INVALID)) & ((n1_proposal_1_n0!=INVALID&n1_proposal_1_n0=n1_proposal_1_n1)|(n1_proposal_1_n2!=INVALID&n1_proposal_1_n2=n1_proposal_1_n1)) ->         (n1_state_ts_1_n1'=n1_proposal_1_n1) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_proposal_1_n1);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n1` here.)
    [n1_process_proposal_assign_state_1_using_n1] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_1_n0!=INVALID&n1_proposal_1_n1!=INVALID)|(n1_proposal_1_n0!=INVALID&n1_proposal_1_n2!=INVALID)|(n1_proposal_1_n1!=INVALID&n1_proposal_1_n2!=INVALID)) & !((n1_proposal_1_n0!=INVALID&n1_proposal_1_n0=n1_proposal_1_n1)|(n1_proposal_1_n2!=INVALID&n1_proposal_1_n2=n1_proposal_1_n1)) ->         (n1_state_ts_1_n1'=BOT) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 2 for seq 1.
    [n1_process_proposal_from_n2_for_seq1] n1_stage=p1_stage & n1_recv_ready=true & n1_recv_from=2 & n1_recv_type=cmd_proposal & n1_recv_seq=1->         (n1_recv_ready'=false) & (n1_proposal_1_n2'=n1_recv_cmd_ts);
    // Try to assign the state using the proposal from node 2 for seq 1 when we have enough proposals.
    [n1_process_proposal_assign_state_1_using_n2] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_1_n0!=INVALID&n1_proposal_1_n1!=INVALID)|(n1_proposal_1_n0!=INVALID&n1_proposal_1_n2!=INVALID)|(n1_proposal_1_n1!=INVALID&n1_proposal_1_n2!=INVALID)) & ((n1_proposal_1_n0!=INVALID&n1_proposal_1_n0=n1_proposal_1_n2)|(n1_proposal_1_n1!=INVALID&n1_proposal_1_n1=n1_proposal_1_n2)) ->         (n1_state_ts_1_n1'=n1_proposal_1_n2) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_proposal_1_n2);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n2` here.)
    [n1_process_proposal_assign_state_1_using_n2] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_1_n0!=INVALID&n1_proposal_1_n1!=INVALID)|(n1_proposal_1_n0!=INVALID&n1_proposal_1_n2!=INVALID)|(n1_proposal_1_n1!=INVALID&n1_proposal_1_n2!=INVALID)) & !((n1_proposal_1_n0!=INVALID&n1_proposal_1_n0=n1_proposal_1_n2)|(n1_proposal_1_n1!=INVALID&n1_proposal_1_n1=n1_proposal_1_n2)) ->         (n1_state_ts_1_n1'=BOT) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 0 for seq 2.
    [n1_process_proposal_from_n0_for_seq2] n1_stage=p1_stage & n1_recv_ready=true & n1_recv_from=0 & n1_recv_type=cmd_proposal & n1_recv_seq=2->         (n1_recv_ready'=false) & (n1_proposal_2_n0'=n1_recv_cmd_ts);
    // Try to assign the state using the proposal from node 0 for seq 2 when we have enough proposals.
    [n1_process_proposal_assign_state_2_using_n0] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_2_n0!=INVALID&n1_proposal_2_n1!=INVALID)|(n1_proposal_2_n0!=INVALID&n1_proposal_2_n2!=INVALID)|(n1_proposal_2_n1!=INVALID&n1_proposal_2_n2!=INVALID)) & ((n1_proposal_2_n1!=INVALID&n1_proposal_2_n1=n1_proposal_2_n0)|(n1_proposal_2_n2!=INVALID&n1_proposal_2_n2=n1_proposal_2_n0)) ->         (n1_state_ts_2_n1'=n1_proposal_2_n0) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_proposal_2_n0);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n0` here.)
    [n1_process_proposal_assign_state_2_using_n0] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_2_n0!=INVALID&n1_proposal_2_n1!=INVALID)|(n1_proposal_2_n0!=INVALID&n1_proposal_2_n2!=INVALID)|(n1_proposal_2_n1!=INVALID&n1_proposal_2_n2!=INVALID)) & !((n1_proposal_2_n1!=INVALID&n1_proposal_2_n1=n1_proposal_2_n0)|(n1_proposal_2_n2!=INVALID&n1_proposal_2_n2=n1_proposal_2_n0)) ->         (n1_state_ts_2_n1'=BOT) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 1 for seq 2.
    [n1_process_proposal_from_n1_for_seq2] n1_stage=p1_stage & n1_recv_ready=true & n1_recv_from=1 & n1_recv_type=cmd_proposal & n1_recv_seq=2->         (n1_recv_ready'=false) & (n1_proposal_2_n1'=n1_recv_cmd_ts);
    // Try to assign the state using the proposal from node 1 for seq 2 when we have enough proposals.
    [n1_process_proposal_assign_state_2_using_n1] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_2_n0!=INVALID&n1_proposal_2_n1!=INVALID)|(n1_proposal_2_n0!=INVALID&n1_proposal_2_n2!=INVALID)|(n1_proposal_2_n1!=INVALID&n1_proposal_2_n2!=INVALID)) & ((n1_proposal_2_n0!=INVALID&n1_proposal_2_n0=n1_proposal_2_n1)|(n1_proposal_2_n2!=INVALID&n1_proposal_2_n2=n1_proposal_2_n1)) ->         (n1_state_ts_2_n1'=n1_proposal_2_n1) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_proposal_2_n1);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n1` here.)
    [n1_process_proposal_assign_state_2_using_n1] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_2_n0!=INVALID&n1_proposal_2_n1!=INVALID)|(n1_proposal_2_n0!=INVALID&n1_proposal_2_n2!=INVALID)|(n1_proposal_2_n1!=INVALID&n1_proposal_2_n2!=INVALID)) & !((n1_proposal_2_n0!=INVALID&n1_proposal_2_n0=n1_proposal_2_n1)|(n1_proposal_2_n2!=INVALID&n1_proposal_2_n2=n1_proposal_2_n1)) ->         (n1_state_ts_2_n1'=BOT) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 2 for seq 2.
    [n1_process_proposal_from_n2_for_seq2] n1_stage=p1_stage & n1_recv_ready=true & n1_recv_from=2 & n1_recv_type=cmd_proposal & n1_recv_seq=2->         (n1_recv_ready'=false) & (n1_proposal_2_n2'=n1_recv_cmd_ts);
    // Try to assign the state using the proposal from node 2 for seq 2 when we have enough proposals.
    [n1_process_proposal_assign_state_2_using_n2] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_2_n0!=INVALID&n1_proposal_2_n1!=INVALID)|(n1_proposal_2_n0!=INVALID&n1_proposal_2_n2!=INVALID)|(n1_proposal_2_n1!=INVALID&n1_proposal_2_n2!=INVALID)) & ((n1_proposal_2_n0!=INVALID&n1_proposal_2_n0=n1_proposal_2_n2)|(n1_proposal_2_n1!=INVALID&n1_proposal_2_n1=n1_proposal_2_n2)) ->         (n1_state_ts_2_n1'=n1_proposal_2_n2) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_proposal_2_n2);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n2` here.)
    [n1_process_proposal_assign_state_2_using_n2] n1_stage=p1_stage & n1_send_ready=false & ((n1_proposal_2_n0!=INVALID&n1_proposal_2_n1!=INVALID)|(n1_proposal_2_n0!=INVALID&n1_proposal_2_n2!=INVALID)|(n1_proposal_2_n1!=INVALID&n1_proposal_2_n2!=INVALID)) & !((n1_proposal_2_n0!=INVALID&n1_proposal_2_n0=n1_proposal_2_n2)|(n1_proposal_2_n1!=INVALID&n1_proposal_2_n1=n1_proposal_2_n2)) ->         (n1_state_ts_2_n1'=BOT) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT);

    // Process when a State pkt is ready.
    [n1_drop_recv_if_state_in_p2s] n1_stage=p2s_stage & n1_recv_ready=true & n1_recv_type!=cmd_state -> (n1_recv_ready'=false);
    
    // Try to receive the state from node 0 for seq 0.
    [n1_process_state_from_n0_for_seq_0] n1_stage=p2s_stage & n1_recv_ready=true & n1_recv_from=0 & n1_recv_type=cmd_state & n1_recv_seq=0 ->         (n1_recv_ready'=false) & (n1_state_ts_0_n0'=n1_recv_cmd_ts);
    // Try to assign the state using the state from node 0 for seq 0 when we have enough states.
    [n1_process_state_assign_vote_0_using_n0] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n1!=INVALID)|(n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n2!=INVALID)|(n1_state_ts_0_n1!=INVALID&n1_state_ts_0_n2!=INVALID)) &  ((n1_state_ts_0_n1!=INVALID&n1_state_ts_0_n1=n1_state_ts_0_n0)|(n1_state_ts_0_n2!=INVALID&n1_state_ts_0_n2=n1_state_ts_0_n0)) ->         (n1_vote_ts_0_n1'=n1_state_ts_0_n0) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=n1_state_ts_0_n0);
    // We got enough states but no enough same states, thus assigning BOT.
    [n1_process_state_assign_vote_0_using_n0] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n1!=INVALID)|(n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n2!=INVALID)|(n1_state_ts_0_n1!=INVALID&n1_state_ts_0_n2!=INVALID)) & !((n1_state_ts_0_n1!=INVALID&n1_state_ts_0_n1=n1_state_ts_0_n0)|(n1_state_ts_0_n2!=INVALID&n1_state_ts_0_n2=n1_state_ts_0_n0)) ->         (n1_vote_ts_0_n1'=QUES_VOTE) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=BOT);
    // Try to receive the state from node 1 for seq 0.
    [n1_process_state_from_n1_for_seq_0] n1_stage=p2s_stage & n1_recv_ready=true & n1_recv_from=1 & n1_recv_type=cmd_state & n1_recv_seq=0 ->         (n1_recv_ready'=false) & (n1_state_ts_0_n1'=n1_recv_cmd_ts);
    // Try to assign the state using the state from node 1 for seq 0 when we have enough states.
    [n1_process_state_assign_vote_0_using_n1] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n1!=INVALID)|(n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n2!=INVALID)|(n1_state_ts_0_n1!=INVALID&n1_state_ts_0_n2!=INVALID)) &  ((n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n0=n1_state_ts_0_n1)|(n1_state_ts_0_n2!=INVALID&n1_state_ts_0_n2=n1_state_ts_0_n1)) ->         (n1_vote_ts_0_n1'=n1_state_ts_0_n1) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=n1_state_ts_0_n1);
    // We got enough states but no enough same states, thus assigning BOT.
    [n1_process_state_assign_vote_0_using_n1] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n1!=INVALID)|(n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n2!=INVALID)|(n1_state_ts_0_n1!=INVALID&n1_state_ts_0_n2!=INVALID)) & !((n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n0=n1_state_ts_0_n1)|(n1_state_ts_0_n2!=INVALID&n1_state_ts_0_n2=n1_state_ts_0_n1)) ->         (n1_vote_ts_0_n1'=QUES_VOTE) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=BOT);
    // Try to receive the state from node 2 for seq 0.
    [n1_process_state_from_n2_for_seq_0] n1_stage=p2s_stage & n1_recv_ready=true & n1_recv_from=2 & n1_recv_type=cmd_state & n1_recv_seq=0 ->         (n1_recv_ready'=false) & (n1_state_ts_0_n2'=n1_recv_cmd_ts);
    // Try to assign the state using the state from node 2 for seq 0 when we have enough states.
    [n1_process_state_assign_vote_0_using_n2] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n1!=INVALID)|(n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n2!=INVALID)|(n1_state_ts_0_n1!=INVALID&n1_state_ts_0_n2!=INVALID)) &  ((n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n0=n1_state_ts_0_n2)|(n1_state_ts_0_n1!=INVALID&n1_state_ts_0_n1=n1_state_ts_0_n2)) ->         (n1_vote_ts_0_n1'=n1_state_ts_0_n2) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=n1_state_ts_0_n2);
    // We got enough states but no enough same states, thus assigning BOT.
    [n1_process_state_assign_vote_0_using_n2] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n1!=INVALID)|(n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n2!=INVALID)|(n1_state_ts_0_n1!=INVALID&n1_state_ts_0_n2!=INVALID)) & !((n1_state_ts_0_n0!=INVALID&n1_state_ts_0_n0=n1_state_ts_0_n2)|(n1_state_ts_0_n1!=INVALID&n1_state_ts_0_n1=n1_state_ts_0_n2)) ->         (n1_vote_ts_0_n1'=QUES_VOTE) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=BOT);
    // Try to receive the state from node 0 for seq 1.
    [n1_process_state_from_n0_for_seq_1] n1_stage=p2s_stage & n1_recv_ready=true & n1_recv_from=0 & n1_recv_type=cmd_state & n1_recv_seq=1 ->         (n1_recv_ready'=false) & (n1_state_ts_1_n0'=n1_recv_cmd_ts);
    // Try to assign the state using the state from node 0 for seq 1 when we have enough states.
    [n1_process_state_assign_vote_1_using_n0] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n1!=INVALID)|(n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n2!=INVALID)|(n1_state_ts_1_n1!=INVALID&n1_state_ts_1_n2!=INVALID)) &  ((n1_state_ts_1_n1!=INVALID&n1_state_ts_1_n1=n1_state_ts_1_n0)|(n1_state_ts_1_n2!=INVALID&n1_state_ts_1_n2=n1_state_ts_1_n0)) ->         (n1_vote_ts_1_n1'=n1_state_ts_1_n0) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=n1_state_ts_1_n0);
    // We got enough states but no enough same states, thus assigning BOT.
    [n1_process_state_assign_vote_1_using_n0] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n1!=INVALID)|(n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n2!=INVALID)|(n1_state_ts_1_n1!=INVALID&n1_state_ts_1_n2!=INVALID)) & !((n1_state_ts_1_n1!=INVALID&n1_state_ts_1_n1=n1_state_ts_1_n0)|(n1_state_ts_1_n2!=INVALID&n1_state_ts_1_n2=n1_state_ts_1_n0)) ->         (n1_vote_ts_1_n1'=QUES_VOTE) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=BOT);
    // Try to receive the state from node 1 for seq 1.
    [n1_process_state_from_n1_for_seq_1] n1_stage=p2s_stage & n1_recv_ready=true & n1_recv_from=1 & n1_recv_type=cmd_state & n1_recv_seq=1 ->         (n1_recv_ready'=false) & (n1_state_ts_1_n1'=n1_recv_cmd_ts);
    // Try to assign the state using the state from node 1 for seq 1 when we have enough states.
    [n1_process_state_assign_vote_1_using_n1] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n1!=INVALID)|(n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n2!=INVALID)|(n1_state_ts_1_n1!=INVALID&n1_state_ts_1_n2!=INVALID)) &  ((n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n0=n1_state_ts_1_n1)|(n1_state_ts_1_n2!=INVALID&n1_state_ts_1_n2=n1_state_ts_1_n1)) ->         (n1_vote_ts_1_n1'=n1_state_ts_1_n1) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=n1_state_ts_1_n1);
    // We got enough states but no enough same states, thus assigning BOT.
    [n1_process_state_assign_vote_1_using_n1] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n1!=INVALID)|(n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n2!=INVALID)|(n1_state_ts_1_n1!=INVALID&n1_state_ts_1_n2!=INVALID)) & !((n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n0=n1_state_ts_1_n1)|(n1_state_ts_1_n2!=INVALID&n1_state_ts_1_n2=n1_state_ts_1_n1)) ->         (n1_vote_ts_1_n1'=QUES_VOTE) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=BOT);
    // Try to receive the state from node 2 for seq 1.
    [n1_process_state_from_n2_for_seq_1] n1_stage=p2s_stage & n1_recv_ready=true & n1_recv_from=2 & n1_recv_type=cmd_state & n1_recv_seq=1 ->         (n1_recv_ready'=false) & (n1_state_ts_1_n2'=n1_recv_cmd_ts);
    // Try to assign the state using the state from node 2 for seq 1 when we have enough states.
    [n1_process_state_assign_vote_1_using_n2] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n1!=INVALID)|(n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n2!=INVALID)|(n1_state_ts_1_n1!=INVALID&n1_state_ts_1_n2!=INVALID)) &  ((n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n0=n1_state_ts_1_n2)|(n1_state_ts_1_n1!=INVALID&n1_state_ts_1_n1=n1_state_ts_1_n2)) ->         (n1_vote_ts_1_n1'=n1_state_ts_1_n2) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=n1_state_ts_1_n2);
    // We got enough states but no enough same states, thus assigning BOT.
    [n1_process_state_assign_vote_1_using_n2] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n1!=INVALID)|(n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n2!=INVALID)|(n1_state_ts_1_n1!=INVALID&n1_state_ts_1_n2!=INVALID)) & !((n1_state_ts_1_n0!=INVALID&n1_state_ts_1_n0=n1_state_ts_1_n2)|(n1_state_ts_1_n1!=INVALID&n1_state_ts_1_n1=n1_state_ts_1_n2)) ->         (n1_vote_ts_1_n1'=QUES_VOTE) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=BOT);
    // Try to receive the state from node 0 for seq 2.
    [n1_process_state_from_n0_for_seq_2] n1_stage=p2s_stage & n1_recv_ready=true & n1_recv_from=0 & n1_recv_type=cmd_state & n1_recv_seq=2 ->         (n1_recv_ready'=false) & (n1_state_ts_2_n0'=n1_recv_cmd_ts);
    // Try to assign the state using the state from node 0 for seq 2 when we have enough states.
    [n1_process_state_assign_vote_2_using_n0] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n1!=INVALID)|(n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n2!=INVALID)|(n1_state_ts_2_n1!=INVALID&n1_state_ts_2_n2!=INVALID)) &  ((n1_state_ts_2_n1!=INVALID&n1_state_ts_2_n1=n1_state_ts_2_n0)|(n1_state_ts_2_n2!=INVALID&n1_state_ts_2_n2=n1_state_ts_2_n0)) ->         (n1_vote_ts_2_n1'=n1_state_ts_2_n0) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=n1_state_ts_2_n0);
    // We got enough states but no enough same states, thus assigning BOT.
    [n1_process_state_assign_vote_2_using_n0] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n1!=INVALID)|(n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n2!=INVALID)|(n1_state_ts_2_n1!=INVALID&n1_state_ts_2_n2!=INVALID)) & !((n1_state_ts_2_n1!=INVALID&n1_state_ts_2_n1=n1_state_ts_2_n0)|(n1_state_ts_2_n2!=INVALID&n1_state_ts_2_n2=n1_state_ts_2_n0)) ->         (n1_vote_ts_2_n1'=QUES_VOTE) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=BOT);
    // Try to receive the state from node 1 for seq 2.
    [n1_process_state_from_n1_for_seq_2] n1_stage=p2s_stage & n1_recv_ready=true & n1_recv_from=1 & n1_recv_type=cmd_state & n1_recv_seq=2 ->         (n1_recv_ready'=false) & (n1_state_ts_2_n1'=n1_recv_cmd_ts);
    // Try to assign the state using the state from node 1 for seq 2 when we have enough states.
    [n1_process_state_assign_vote_2_using_n1] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n1!=INVALID)|(n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n2!=INVALID)|(n1_state_ts_2_n1!=INVALID&n1_state_ts_2_n2!=INVALID)) &  ((n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n0=n1_state_ts_2_n1)|(n1_state_ts_2_n2!=INVALID&n1_state_ts_2_n2=n1_state_ts_2_n1)) ->         (n1_vote_ts_2_n1'=n1_state_ts_2_n1) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=n1_state_ts_2_n1);
    // We got enough states but no enough same states, thus assigning BOT.
    [n1_process_state_assign_vote_2_using_n1] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n1!=INVALID)|(n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n2!=INVALID)|(n1_state_ts_2_n1!=INVALID&n1_state_ts_2_n2!=INVALID)) & !((n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n0=n1_state_ts_2_n1)|(n1_state_ts_2_n2!=INVALID&n1_state_ts_2_n2=n1_state_ts_2_n1)) ->         (n1_vote_ts_2_n1'=QUES_VOTE) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=BOT);
    // Try to receive the state from node 2 for seq 2.
    [n1_process_state_from_n2_for_seq_2] n1_stage=p2s_stage & n1_recv_ready=true & n1_recv_from=2 & n1_recv_type=cmd_state & n1_recv_seq=2 ->         (n1_recv_ready'=false) & (n1_state_ts_2_n2'=n1_recv_cmd_ts);
    // Try to assign the state using the state from node 2 for seq 2 when we have enough states.
    [n1_process_state_assign_vote_2_using_n2] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n1!=INVALID)|(n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n2!=INVALID)|(n1_state_ts_2_n1!=INVALID&n1_state_ts_2_n2!=INVALID)) &  ((n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n0=n1_state_ts_2_n2)|(n1_state_ts_2_n1!=INVALID&n1_state_ts_2_n1=n1_state_ts_2_n2)) ->         (n1_vote_ts_2_n1'=n1_state_ts_2_n2) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=n1_state_ts_2_n2);
    // We got enough states but no enough same states, thus assigning BOT.
    [n1_process_state_assign_vote_2_using_n2] n1_stage=p2s_stage & n1_send_ready=false & ((n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n1!=INVALID)|(n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n2!=INVALID)|(n1_state_ts_2_n1!=INVALID&n1_state_ts_2_n2!=INVALID)) & !((n1_state_ts_2_n0!=INVALID&n1_state_ts_2_n0=n1_state_ts_2_n2)|(n1_state_ts_2_n1!=INVALID&n1_state_ts_2_n1=n1_state_ts_2_n2)) ->         (n1_vote_ts_2_n1'=QUES_VOTE) & (n1_stage'=p2v_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_vote) & (n1_send_cmd_ts'=BOT);

    // Process when a Vote pkt is ready.
    [n1_drop_recv_if_vote_in_p2v] n1_stage=p2v_stage & n1_recv_ready=true & n1_recv_type!=cmd_vote -> (n1_recv_ready'=false);
    
    // Try to receive the vote from node 0 for seq 0.
    [n1_process_vote_from_n0_for_seq0] n1_stage=p2v_stage & n1_recv_ready=true & n1_recv_from=0 & n1_recv_type=cmd_vote & n1_recv_seq=0 ->         (n1_recv_ready'=false) & (n1_vote_ts_0_n0'=n1_recv_cmd_ts);
    // Try to use the vote from node 0 for seq 0 when we have enough same votes, and return.
    [n1_process_vote_for_seq0_using_n0] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0!=QUES_VOTE) & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) &  ((n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1=n1_vote_ts_0_n0)|(n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2=n1_vote_ts_0_n0)) ->         (n1_log_ts_0'=n1_vote_ts_0_n0) & (n1_stage'=p1_stage) & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 0 that is not QUES_VOTE.
    [n1_process_vote_for_seq0_using_n0] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0!=QUES_VOTE) & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) & !((n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1=n1_vote_ts_0_n0)|(n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2=n1_vote_ts_0_n0)) ->         (n1_state_ts_0_n1'=n1_vote_ts_0_n0) & (n1_vote_ts_0_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_0_n0) & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n1_process_vote_for_seq0_using_n0] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) & n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0=QUES_VOTE&n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1=QUES_VOTE&n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2=QUES_VOTE ->         (n1_state_ts_0_n1'=BOT)                      & (n1_vote_ts_0_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT)                      & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    [n1_process_vote_for_seq0_using_n0] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) & n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0=QUES_VOTE&n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1=QUES_VOTE&n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2=QUES_VOTE ->         (n1_state_ts_0_n1'=n1_state_ts_0_n0) & (n1_vote_ts_0_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_0_n0) & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    // Try to receive the vote from node 1 for seq 0.
    [n1_process_vote_from_n1_for_seq0] n1_stage=p2v_stage & n1_recv_ready=true & n1_recv_from=1 & n1_recv_type=cmd_vote & n1_recv_seq=0 ->         (n1_recv_ready'=false) & (n1_vote_ts_0_n1'=n1_recv_cmd_ts);
    // Try to use the vote from node 1 for seq 0 when we have enough same votes, and return.
    [n1_process_vote_for_seq0_using_n1] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1!=QUES_VOTE) & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) &  ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0=n1_vote_ts_0_n1)|(n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2=n1_vote_ts_0_n1)) ->         (n1_log_ts_0'=n1_vote_ts_0_n1) & (n1_stage'=p1_stage) & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 1 that is not QUES_VOTE.
    [n1_process_vote_for_seq0_using_n1] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1!=QUES_VOTE) & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) & !((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0=n1_vote_ts_0_n1)|(n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2=n1_vote_ts_0_n1)) ->         (n1_state_ts_0_n1'=n1_vote_ts_0_n1) & (n1_vote_ts_0_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_0_n1) & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n1_process_vote_for_seq0_using_n1] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) & n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0=QUES_VOTE&n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1=QUES_VOTE&n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2=QUES_VOTE ->         (n1_state_ts_0_n1'=BOT)                      & (n1_vote_ts_0_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT)                      & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    [n1_process_vote_for_seq0_using_n1] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) & n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0=QUES_VOTE&n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1=QUES_VOTE&n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2=QUES_VOTE ->         (n1_state_ts_0_n1'=n1_state_ts_0_n1) & (n1_vote_ts_0_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_0_n1) & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    // Try to receive the vote from node 2 for seq 0.
    [n1_process_vote_from_n2_for_seq0] n1_stage=p2v_stage & n1_recv_ready=true & n1_recv_from=2 & n1_recv_type=cmd_vote & n1_recv_seq=0 ->         (n1_recv_ready'=false) & (n1_vote_ts_0_n2'=n1_recv_cmd_ts);
    // Try to use the vote from node 2 for seq 0 when we have enough same votes, and return.
    [n1_process_vote_for_seq0_using_n2] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2!=QUES_VOTE) & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) &  ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0=n1_vote_ts_0_n2)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1=n1_vote_ts_0_n2)) ->         (n1_log_ts_0'=n1_vote_ts_0_n2) & (n1_stage'=p1_stage) & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 2 that is not QUES_VOTE.
    [n1_process_vote_for_seq0_using_n2] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2!=QUES_VOTE) & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) & !((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0=n1_vote_ts_0_n2)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1=n1_vote_ts_0_n2)) ->         (n1_state_ts_0_n1'=n1_vote_ts_0_n2) & (n1_vote_ts_0_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_0_n2) & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n1_process_vote_for_seq0_using_n2] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) & n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0=QUES_VOTE&n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1=QUES_VOTE&n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2=QUES_VOTE ->         (n1_state_ts_0_n1'=BOT)                      & (n1_vote_ts_0_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT)                      & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    [n1_process_vote_for_seq0_using_n2] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n1!=INVALID)|(n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n2!=INVALID)|(n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n2!=INVALID)) & n1_vote_ts_0_n0!=INVALID&n1_vote_ts_0_n0=QUES_VOTE&n1_vote_ts_0_n1!=INVALID&n1_vote_ts_0_n1=QUES_VOTE&n1_vote_ts_0_n2!=INVALID&n1_vote_ts_0_n2=QUES_VOTE ->         (n1_state_ts_0_n1'=n1_state_ts_0_n2) & (n1_vote_ts_0_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_0_n2) & (n1_state_ts_0_n0'=INVALID)&(n1_vote_ts_0_n0'=INVALID)&(n1_state_ts_0_n2'=INVALID)&(n1_vote_ts_0_n2'=INVALID);
    // Try to receive the vote from node 0 for seq 1.
    [n1_process_vote_from_n0_for_seq1] n1_stage=p2v_stage & n1_recv_ready=true & n1_recv_from=0 & n1_recv_type=cmd_vote & n1_recv_seq=1 ->         (n1_recv_ready'=false) & (n1_vote_ts_1_n0'=n1_recv_cmd_ts);
    // Try to use the vote from node 0 for seq 1 when we have enough same votes, and return.
    [n1_process_vote_for_seq1_using_n0] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0!=QUES_VOTE) & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) &  ((n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1=n1_vote_ts_1_n0)|(n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2=n1_vote_ts_1_n0)) ->         (n1_log_ts_1'=n1_vote_ts_1_n0) & (n1_stage'=p1_stage) & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 0 that is not QUES_VOTE.
    [n1_process_vote_for_seq1_using_n0] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0!=QUES_VOTE) & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) & !((n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1=n1_vote_ts_1_n0)|(n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2=n1_vote_ts_1_n0)) ->         (n1_state_ts_1_n1'=n1_vote_ts_1_n0) & (n1_vote_ts_1_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_1_n0) & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n1_process_vote_for_seq1_using_n0] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) & n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0=QUES_VOTE&n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1=QUES_VOTE&n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2=QUES_VOTE ->         (n1_state_ts_1_n1'=BOT)                      & (n1_vote_ts_1_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT)                      & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    [n1_process_vote_for_seq1_using_n0] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) & n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0=QUES_VOTE&n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1=QUES_VOTE&n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2=QUES_VOTE ->         (n1_state_ts_1_n1'=n1_state_ts_1_n0) & (n1_vote_ts_1_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_1_n0) & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    // Try to receive the vote from node 1 for seq 1.
    [n1_process_vote_from_n1_for_seq1] n1_stage=p2v_stage & n1_recv_ready=true & n1_recv_from=1 & n1_recv_type=cmd_vote & n1_recv_seq=1 ->         (n1_recv_ready'=false) & (n1_vote_ts_1_n1'=n1_recv_cmd_ts);
    // Try to use the vote from node 1 for seq 1 when we have enough same votes, and return.
    [n1_process_vote_for_seq1_using_n1] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1!=QUES_VOTE) & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) &  ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0=n1_vote_ts_1_n1)|(n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2=n1_vote_ts_1_n1)) ->         (n1_log_ts_1'=n1_vote_ts_1_n1) & (n1_stage'=p1_stage) & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 1 that is not QUES_VOTE.
    [n1_process_vote_for_seq1_using_n1] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1!=QUES_VOTE) & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) & !((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0=n1_vote_ts_1_n1)|(n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2=n1_vote_ts_1_n1)) ->         (n1_state_ts_1_n1'=n1_vote_ts_1_n1) & (n1_vote_ts_1_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_1_n1) & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n1_process_vote_for_seq1_using_n1] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) & n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0=QUES_VOTE&n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1=QUES_VOTE&n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2=QUES_VOTE ->         (n1_state_ts_1_n1'=BOT)                      & (n1_vote_ts_1_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT)                      & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    [n1_process_vote_for_seq1_using_n1] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) & n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0=QUES_VOTE&n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1=QUES_VOTE&n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2=QUES_VOTE ->         (n1_state_ts_1_n1'=n1_state_ts_1_n1) & (n1_vote_ts_1_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_1_n1) & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    // Try to receive the vote from node 2 for seq 1.
    [n1_process_vote_from_n2_for_seq1] n1_stage=p2v_stage & n1_recv_ready=true & n1_recv_from=2 & n1_recv_type=cmd_vote & n1_recv_seq=1 ->         (n1_recv_ready'=false) & (n1_vote_ts_1_n2'=n1_recv_cmd_ts);
    // Try to use the vote from node 2 for seq 1 when we have enough same votes, and return.
    [n1_process_vote_for_seq1_using_n2] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2!=QUES_VOTE) & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) &  ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0=n1_vote_ts_1_n2)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1=n1_vote_ts_1_n2)) ->         (n1_log_ts_1'=n1_vote_ts_1_n2) & (n1_stage'=p1_stage) & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 2 that is not QUES_VOTE.
    [n1_process_vote_for_seq1_using_n2] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2!=QUES_VOTE) & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) & !((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0=n1_vote_ts_1_n2)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1=n1_vote_ts_1_n2)) ->         (n1_state_ts_1_n1'=n1_vote_ts_1_n2) & (n1_vote_ts_1_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_1_n2) & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n1_process_vote_for_seq1_using_n2] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) & n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0=QUES_VOTE&n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1=QUES_VOTE&n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2=QUES_VOTE ->         (n1_state_ts_1_n1'=BOT)                      & (n1_vote_ts_1_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT)                      & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    [n1_process_vote_for_seq1_using_n2] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n1!=INVALID)|(n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n2!=INVALID)|(n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n2!=INVALID)) & n1_vote_ts_1_n0!=INVALID&n1_vote_ts_1_n0=QUES_VOTE&n1_vote_ts_1_n1!=INVALID&n1_vote_ts_1_n1=QUES_VOTE&n1_vote_ts_1_n2!=INVALID&n1_vote_ts_1_n2=QUES_VOTE ->         (n1_state_ts_1_n1'=n1_state_ts_1_n2) & (n1_vote_ts_1_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_1_n2) & (n1_state_ts_1_n0'=INVALID)&(n1_vote_ts_1_n0'=INVALID)&(n1_state_ts_1_n2'=INVALID)&(n1_vote_ts_1_n2'=INVALID);
    // Try to receive the vote from node 0 for seq 2.
    [n1_process_vote_from_n0_for_seq2] n1_stage=p2v_stage & n1_recv_ready=true & n1_recv_from=0 & n1_recv_type=cmd_vote & n1_recv_seq=2 ->         (n1_recv_ready'=false) & (n1_vote_ts_2_n0'=n1_recv_cmd_ts);
    // Try to use the vote from node 0 for seq 2 when we have enough same votes, and return.
    [n1_process_vote_for_seq2_using_n0] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0!=QUES_VOTE) & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) &  ((n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1=n1_vote_ts_2_n0)|(n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2=n1_vote_ts_2_n0)) ->         (n1_log_ts_2'=n1_vote_ts_2_n0) & (n1_stage'=p1_stage) & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 0 that is not QUES_VOTE.
    [n1_process_vote_for_seq2_using_n0] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0!=QUES_VOTE) & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) & !((n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1=n1_vote_ts_2_n0)|(n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2=n1_vote_ts_2_n0)) ->         (n1_state_ts_2_n1'=n1_vote_ts_2_n0) & (n1_vote_ts_2_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_2_n0) & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n1_process_vote_for_seq2_using_n0] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) & n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0=QUES_VOTE&n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1=QUES_VOTE&n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2=QUES_VOTE ->         (n1_state_ts_2_n1'=BOT)                      & (n1_vote_ts_2_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT)                      & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);
    [n1_process_vote_for_seq2_using_n0] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) & n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0=QUES_VOTE&n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1=QUES_VOTE&n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2=QUES_VOTE ->         (n1_state_ts_2_n1'=n1_state_ts_2_n0) & (n1_vote_ts_2_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_2_n0) & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);
    // Try to receive the vote from node 1 for seq 2.
    [n1_process_vote_from_n1_for_seq2] n1_stage=p2v_stage & n1_recv_ready=true & n1_recv_from=1 & n1_recv_type=cmd_vote & n1_recv_seq=2 ->         (n1_recv_ready'=false) & (n1_vote_ts_2_n1'=n1_recv_cmd_ts);
    // Try to use the vote from node 1 for seq 2 when we have enough same votes, and return.
    [n1_process_vote_for_seq2_using_n1] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1!=QUES_VOTE) & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) &  ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0=n1_vote_ts_2_n1)|(n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2=n1_vote_ts_2_n1)) ->         (n1_log_ts_2'=n1_vote_ts_2_n1) & (n1_stage'=p1_stage) & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 1 that is not QUES_VOTE.
    [n1_process_vote_for_seq2_using_n1] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1!=QUES_VOTE) & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) & !((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0=n1_vote_ts_2_n1)|(n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2=n1_vote_ts_2_n1)) ->         (n1_state_ts_2_n1'=n1_vote_ts_2_n1) & (n1_vote_ts_2_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_2_n1) & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n1_process_vote_for_seq2_using_n1] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) & n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0=QUES_VOTE&n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1=QUES_VOTE&n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2=QUES_VOTE ->         (n1_state_ts_2_n1'=BOT)                      & (n1_vote_ts_2_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT)                      & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);
    [n1_process_vote_for_seq2_using_n1] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) & n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0=QUES_VOTE&n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1=QUES_VOTE&n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2=QUES_VOTE ->         (n1_state_ts_2_n1'=n1_state_ts_2_n1) & (n1_vote_ts_2_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_2_n1) & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);
    // Try to receive the vote from node 2 for seq 2.
    [n1_process_vote_from_n2_for_seq2] n1_stage=p2v_stage & n1_recv_ready=true & n1_recv_from=2 & n1_recv_type=cmd_vote & n1_recv_seq=2 ->         (n1_recv_ready'=false) & (n1_vote_ts_2_n2'=n1_recv_cmd_ts);
    // Try to use the vote from node 2 for seq 2 when we have enough same votes, and return.
    [n1_process_vote_for_seq2_using_n2] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2!=QUES_VOTE) & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) &  ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0=n1_vote_ts_2_n2)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1=n1_vote_ts_2_n2)) ->         (n1_log_ts_2'=n1_vote_ts_2_n2) & (n1_stage'=p1_stage) & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);
    // We don't have enough same votes, but we have the vote from 2 that is not QUES_VOTE.
    [n1_process_vote_for_seq2_using_n2] n1_stage=p2v_stage & n1_send_ready=false & (n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2!=QUES_VOTE) & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) & !((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0=n1_vote_ts_2_n2)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1=n1_vote_ts_2_n2)) ->         (n1_state_ts_2_n1'=n1_vote_ts_2_n2) & (n1_vote_ts_2_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_2_n2) & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n1_process_vote_for_seq2_using_n2] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) & n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0=QUES_VOTE&n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1=QUES_VOTE&n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2=QUES_VOTE ->         (n1_state_ts_2_n1'=BOT)                      & (n1_vote_ts_2_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=BOT)                      & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);
    [n1_process_vote_for_seq2_using_n2] n1_stage=p2v_stage & n1_send_ready=false & ((n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n1!=INVALID)|(n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n2!=INVALID)|(n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n2!=INVALID)) & n1_vote_ts_2_n0!=INVALID&n1_vote_ts_2_n0=QUES_VOTE&n1_vote_ts_2_n1!=INVALID&n1_vote_ts_2_n1=QUES_VOTE&n1_vote_ts_2_n2!=INVALID&n1_vote_ts_2_n2=QUES_VOTE ->         (n1_state_ts_2_n1'=n1_state_ts_2_n2) & (n1_vote_ts_2_n1'=INVALID) & (n1_stage'=p2s_stage) & (n1_send_ready'=true) & (n1_send_is_broadcast'=true) & (n1_send_type'=cmd_state) & (n1_send_cmd_ts'=n1_state_ts_2_n2) & (n1_state_ts_2_n0'=INVALID)&(n1_vote_ts_2_n0'=INVALID)&(n1_state_ts_2_n2'=INVALID)&(n1_vote_ts_2_n2'=INVALID);

    // Send when a pkt is ready; Recv when a pkt is ready.
    [recv_01_0] n1_recv_ready=false ->         (n1_recv_ready'=true) & (n1_recv_from'=0) & (n1_recv_type'=w01_pkt_type_0) & (n1_recv_seq'=w01_pkt_seq_0) & (n1_recv_round'=w01_pkt_round_0) & (n1_recv_cmd_ts'=w01_pkt_cmd_ts_0);
    [send_10_0] n1_send_ready=true & n1_send_is_broadcast=false -> (n1_send_ready'=false);
    [recv_21_0] n1_recv_ready=false ->         (n1_recv_ready'=true) & (n1_recv_from'=2) & (n1_recv_type'=w21_pkt_type_0) & (n1_recv_seq'=w21_pkt_seq_0) & (n1_recv_round'=w21_pkt_round_0) & (n1_recv_cmd_ts'=w21_pkt_cmd_ts_0);
    [send_12_0] n1_send_ready=true & n1_send_is_broadcast=false -> (n1_send_ready'=false);
    [recv_01_1] n1_recv_ready=false ->         (n1_recv_ready'=true) & (n1_recv_from'=0) & (n1_recv_type'=w01_pkt_type_1) & (n1_recv_seq'=w01_pkt_seq_1) & (n1_recv_round'=w01_pkt_round_1) & (n1_recv_cmd_ts'=w01_pkt_cmd_ts_1);
    [send_10_1] n1_send_ready=true & n1_send_is_broadcast=false -> (n1_send_ready'=false);
    [recv_21_1] n1_recv_ready=false ->         (n1_recv_ready'=true) & (n1_recv_from'=2) & (n1_recv_type'=w21_pkt_type_1) & (n1_recv_seq'=w21_pkt_seq_1) & (n1_recv_round'=w21_pkt_round_1) & (n1_recv_cmd_ts'=w21_pkt_cmd_ts_1);
    [send_12_1] n1_send_ready=true & n1_send_is_broadcast=false -> (n1_send_ready'=false);
    [recv_01_2] n1_recv_ready=false ->         (n1_recv_ready'=true) & (n1_recv_from'=0) & (n1_recv_type'=w01_pkt_type_2) & (n1_recv_seq'=w01_pkt_seq_2) & (n1_recv_round'=w01_pkt_round_2) & (n1_recv_cmd_ts'=w01_pkt_cmd_ts_2);
    [send_10_2] n1_send_ready=true & n1_send_is_broadcast=false -> (n1_send_ready'=false);
    [recv_21_2] n1_recv_ready=false ->         (n1_recv_ready'=true) & (n1_recv_from'=2) & (n1_recv_type'=w21_pkt_type_2) & (n1_recv_seq'=w21_pkt_seq_2) & (n1_recv_round'=w21_pkt_round_2) & (n1_recv_cmd_ts'=w21_pkt_cmd_ts_2);
    [send_12_2] n1_send_ready=true & n1_send_is_broadcast=false -> (n1_send_ready'=false);
    [n1_send_broadcast] n1_send_ready=true & n1_send_is_broadcast=true -> (n1_send_ready'=false);
    [n1_send_broadcast] n1_send_ready=true & n1_send_is_broadcast=true -> (n1_send_ready'=false);
    [n1_send_broadcast] n1_send_ready=true & n1_send_is_broadcast=true -> (n1_send_ready'=false);

endmodule


module node2
    // states
	n2_stage : [0..5] init p0_bc_cmd_stage;
    /// p1 stage
    n2_seq : [0..LOG_SIZE] init 0;
    n2_pq_valid_0 : bool init true;
    n2_pq_ts_0 : [0..MAX_TS] init 2;
    n2_pq_valid_1 : bool init false;
    n2_pq_ts_1 : [0..MAX_TS] init 0;
    n2_log_ts_0 : [MIN_TS_VALUE..LOG_SIZE] init INVALID; 
    n2_log_ts_1 : [MIN_TS_VALUE..LOG_SIZE] init INVALID; 
    n2_log_ts_2 : [MIN_TS_VALUE..LOG_SIZE] init INVALID; 
    /// p2 stage
    n2_round_0 : [0..MAX_ROUND] init 0; 
    n2_my_proposal_0 : [0..MAX_TS] init 0;
    n2_round_1 : [0..MAX_ROUND] init 0; 
    n2_my_proposal_1 : [0..MAX_TS] init 0;
    n2_round_2 : [0..MAX_ROUND] init 0; 
    n2_my_proposal_2 : [0..MAX_TS] init 0;
    n2_proposal_0_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_state_ts_0_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_vote_ts_0_n0 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n2_proposal_0_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_state_ts_0_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_vote_ts_0_n1 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n2_proposal_0_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_state_ts_0_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_vote_ts_0_n2 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n2_proposal_1_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_state_ts_1_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_vote_ts_1_n0 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n2_proposal_1_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_state_ts_1_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_vote_ts_1_n1 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n2_proposal_1_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_state_ts_1_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_vote_ts_1_n2 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n2_proposal_2_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_state_ts_2_n0 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_vote_ts_2_n0 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n2_proposal_2_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_state_ts_2_n1 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_vote_ts_2_n1 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;
    n2_proposal_2_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_state_ts_2_n2 : [MIN_TS_VALUE..MAX_TS] init INVALID;
    n2_vote_ts_2_n2 : [MIN_VOTE_VALUE..MAX_TS] init INVALID;

    // pkt to send
    n2_send_ready : bool init false; // ready means not yet sent
    n2_send_is_broadcast : bool init false;
    n2_send_type : [0..NUM_CMD_TYPES] init 0;
    n2_send_seq : [0..LOG_SIZE] init 0;
    n2_send_round : [0..MAX_ROUND] init 0;
    n2_send_cmd_ts : [MIN_TS_VALUE..MAX_TS] init 0;

    // pkt received
    n2_recv_ready : bool init false; // ready means received
    n2_recv_from : [0..NUM_NODES] init 0;
    n2_recv_type : [0..NUM_CMD_TYPES] init 0;
    n2_recv_seq : [0..LOG_SIZE] init 0;
    n2_recv_round : [0..MAX_ROUND] init 0;
    n2_recv_cmd_ts : [MIN_TS_VALUE..MAX_TS] init 0;
    
    // Try on each queue slot and execute if the slot has min ts
    [n2_propose_next_command_for_seq0_usingqueue0] n2_stage=p0_bc_cmd_stage & n2_send_ready=false & n2_seq=0 & n2_pq_valid_0=true & (!n2_pq_valid_0|n2_pq_ts_0>=n2_pq_ts_0)&(!n2_pq_valid_1|n2_pq_ts_1>=n2_pq_ts_0) ->         (n2_stage'=p1_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_proposal) & (n2_send_cmd_ts'=n2_pq_ts_0) & (n2_proposal_0_n2'=n2_pq_ts_0);
    [n2_propose_next_command_for_seq1_usingqueue0] n2_stage=p0_bc_cmd_stage & n2_send_ready=false & n2_seq=1 & n2_pq_valid_0=true & (!n2_pq_valid_0|n2_pq_ts_0>=n2_pq_ts_0)&(!n2_pq_valid_1|n2_pq_ts_1>=n2_pq_ts_0) ->         (n2_stage'=p1_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_proposal) & (n2_send_cmd_ts'=n2_pq_ts_0) & (n2_proposal_1_n2'=n2_pq_ts_0);
    [n2_propose_next_command_for_seq2_usingqueue0] n2_stage=p0_bc_cmd_stage & n2_send_ready=false & n2_seq=2 & n2_pq_valid_0=true & (!n2_pq_valid_0|n2_pq_ts_0>=n2_pq_ts_0)&(!n2_pq_valid_1|n2_pq_ts_1>=n2_pq_ts_0) ->         (n2_stage'=p1_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_proposal) & (n2_send_cmd_ts'=n2_pq_ts_0) & (n2_proposal_2_n2'=n2_pq_ts_0);
    [n2_propose_next_command_for_seq0_usingqueue1] n2_stage=p0_bc_cmd_stage & n2_send_ready=false & n2_seq=0 & n2_pq_valid_1=true & (!n2_pq_valid_0|n2_pq_ts_0>=n2_pq_ts_1)&(!n2_pq_valid_1|n2_pq_ts_1>=n2_pq_ts_1) ->         (n2_stage'=p1_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_proposal) & (n2_send_cmd_ts'=n2_pq_ts_1) & (n2_proposal_0_n2'=n2_pq_ts_1);
    [n2_propose_next_command_for_seq1_usingqueue1] n2_stage=p0_bc_cmd_stage & n2_send_ready=false & n2_seq=1 & n2_pq_valid_1=true & (!n2_pq_valid_0|n2_pq_ts_0>=n2_pq_ts_1)&(!n2_pq_valid_1|n2_pq_ts_1>=n2_pq_ts_1) ->         (n2_stage'=p1_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_proposal) & (n2_send_cmd_ts'=n2_pq_ts_1) & (n2_proposal_1_n2'=n2_pq_ts_1);
    [n2_propose_next_command_for_seq2_usingqueue1] n2_stage=p0_bc_cmd_stage & n2_send_ready=false & n2_seq=2 & n2_pq_valid_1=true & (!n2_pq_valid_0|n2_pq_ts_0>=n2_pq_ts_1)&(!n2_pq_valid_1|n2_pq_ts_1>=n2_pq_ts_1) ->         (n2_stage'=p1_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_proposal) & (n2_send_cmd_ts'=n2_pq_ts_1) & (n2_proposal_2_n2'=n2_pq_ts_1);
    
    // Process when a Proposal pkt is ready.
    [n2_drop_recv_if_proposal_in_p1] n2_stage=p1_stage & n2_recv_ready=true & n2_recv_type!=cmd_proposal -> (n2_recv_ready'=false);
    
    // Try to receive the proposal from node 0 for seq 0.
    [n2_process_proposal_from_n0_for_seq0] n2_stage=p1_stage & n2_recv_ready=true & n2_recv_from=0 & n2_recv_type=cmd_proposal & n2_recv_seq=0->         (n2_recv_ready'=false) & (n2_proposal_0_n0'=n2_recv_cmd_ts);
    // Try to assign the state using the proposal from node 0 for seq 0 when we have enough proposals.
    [n2_process_proposal_assign_state_0_using_n0] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_0_n0!=INVALID&n2_proposal_0_n1!=INVALID)|(n2_proposal_0_n0!=INVALID&n2_proposal_0_n2!=INVALID)|(n2_proposal_0_n1!=INVALID&n2_proposal_0_n2!=INVALID)) & ((n2_proposal_0_n1!=INVALID&n2_proposal_0_n1=n2_proposal_0_n0)|(n2_proposal_0_n2!=INVALID&n2_proposal_0_n2=n2_proposal_0_n0)) ->         (n2_state_ts_0_n2'=n2_proposal_0_n0) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_proposal_0_n0);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n0` here.)
    [n2_process_proposal_assign_state_0_using_n0] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_0_n0!=INVALID&n2_proposal_0_n1!=INVALID)|(n2_proposal_0_n0!=INVALID&n2_proposal_0_n2!=INVALID)|(n2_proposal_0_n1!=INVALID&n2_proposal_0_n2!=INVALID)) & !((n2_proposal_0_n1!=INVALID&n2_proposal_0_n1=n2_proposal_0_n0)|(n2_proposal_0_n2!=INVALID&n2_proposal_0_n2=n2_proposal_0_n0)) ->         (n2_state_ts_0_n2'=BOT) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 1 for seq 0.
    [n2_process_proposal_from_n1_for_seq0] n2_stage=p1_stage & n2_recv_ready=true & n2_recv_from=1 & n2_recv_type=cmd_proposal & n2_recv_seq=0->         (n2_recv_ready'=false) & (n2_proposal_0_n1'=n2_recv_cmd_ts);
    // Try to assign the state using the proposal from node 1 for seq 0 when we have enough proposals.
    [n2_process_proposal_assign_state_0_using_n1] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_0_n0!=INVALID&n2_proposal_0_n1!=INVALID)|(n2_proposal_0_n0!=INVALID&n2_proposal_0_n2!=INVALID)|(n2_proposal_0_n1!=INVALID&n2_proposal_0_n2!=INVALID)) & ((n2_proposal_0_n0!=INVALID&n2_proposal_0_n0=n2_proposal_0_n1)|(n2_proposal_0_n2!=INVALID&n2_proposal_0_n2=n2_proposal_0_n1)) ->         (n2_state_ts_0_n2'=n2_proposal_0_n1) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_proposal_0_n1);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n1` here.)
    [n2_process_proposal_assign_state_0_using_n1] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_0_n0!=INVALID&n2_proposal_0_n1!=INVALID)|(n2_proposal_0_n0!=INVALID&n2_proposal_0_n2!=INVALID)|(n2_proposal_0_n1!=INVALID&n2_proposal_0_n2!=INVALID)) & !((n2_proposal_0_n0!=INVALID&n2_proposal_0_n0=n2_proposal_0_n1)|(n2_proposal_0_n2!=INVALID&n2_proposal_0_n2=n2_proposal_0_n1)) ->         (n2_state_ts_0_n2'=BOT) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 2 for seq 0.
    [n2_process_proposal_from_n2_for_seq0] n2_stage=p1_stage & n2_recv_ready=true & n2_recv_from=2 & n2_recv_type=cmd_proposal & n2_recv_seq=0->         (n2_recv_ready'=false) & (n2_proposal_0_n2'=n2_recv_cmd_ts);
    // Try to assign the state using the proposal from node 2 for seq 0 when we have enough proposals.
    [n2_process_proposal_assign_state_0_using_n2] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_0_n0!=INVALID&n2_proposal_0_n1!=INVALID)|(n2_proposal_0_n0!=INVALID&n2_proposal_0_n2!=INVALID)|(n2_proposal_0_n1!=INVALID&n2_proposal_0_n2!=INVALID)) & ((n2_proposal_0_n0!=INVALID&n2_proposal_0_n0=n2_proposal_0_n2)|(n2_proposal_0_n1!=INVALID&n2_proposal_0_n1=n2_proposal_0_n2)) ->         (n2_state_ts_0_n2'=n2_proposal_0_n2) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_proposal_0_n2);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n2` here.)
    [n2_process_proposal_assign_state_0_using_n2] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_0_n0!=INVALID&n2_proposal_0_n1!=INVALID)|(n2_proposal_0_n0!=INVALID&n2_proposal_0_n2!=INVALID)|(n2_proposal_0_n1!=INVALID&n2_proposal_0_n2!=INVALID)) & !((n2_proposal_0_n0!=INVALID&n2_proposal_0_n0=n2_proposal_0_n2)|(n2_proposal_0_n1!=INVALID&n2_proposal_0_n1=n2_proposal_0_n2)) ->         (n2_state_ts_0_n2'=BOT) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 0 for seq 1.
    [n2_process_proposal_from_n0_for_seq1] n2_stage=p1_stage & n2_recv_ready=true & n2_recv_from=0 & n2_recv_type=cmd_proposal & n2_recv_seq=1->         (n2_recv_ready'=false) & (n2_proposal_1_n0'=n2_recv_cmd_ts);
    // Try to assign the state using the proposal from node 0 for seq 1 when we have enough proposals.
    [n2_process_proposal_assign_state_1_using_n0] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_1_n0!=INVALID&n2_proposal_1_n1!=INVALID)|(n2_proposal_1_n0!=INVALID&n2_proposal_1_n2!=INVALID)|(n2_proposal_1_n1!=INVALID&n2_proposal_1_n2!=INVALID)) & ((n2_proposal_1_n1!=INVALID&n2_proposal_1_n1=n2_proposal_1_n0)|(n2_proposal_1_n2!=INVALID&n2_proposal_1_n2=n2_proposal_1_n0)) ->         (n2_state_ts_1_n2'=n2_proposal_1_n0) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_proposal_1_n0);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n0` here.)
    [n2_process_proposal_assign_state_1_using_n0] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_1_n0!=INVALID&n2_proposal_1_n1!=INVALID)|(n2_proposal_1_n0!=INVALID&n2_proposal_1_n2!=INVALID)|(n2_proposal_1_n1!=INVALID&n2_proposal_1_n2!=INVALID)) & !((n2_proposal_1_n1!=INVALID&n2_proposal_1_n1=n2_proposal_1_n0)|(n2_proposal_1_n2!=INVALID&n2_proposal_1_n2=n2_proposal_1_n0)) ->         (n2_state_ts_1_n2'=BOT) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 1 for seq 1.
    [n2_process_proposal_from_n1_for_seq1] n2_stage=p1_stage & n2_recv_ready=true & n2_recv_from=1 & n2_recv_type=cmd_proposal & n2_recv_seq=1->         (n2_recv_ready'=false) & (n2_proposal_1_n1'=n2_recv_cmd_ts);
    // Try to assign the state using the proposal from node 1 for seq 1 when we have enough proposals.
    [n2_process_proposal_assign_state_1_using_n1] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_1_n0!=INVALID&n2_proposal_1_n1!=INVALID)|(n2_proposal_1_n0!=INVALID&n2_proposal_1_n2!=INVALID)|(n2_proposal_1_n1!=INVALID&n2_proposal_1_n2!=INVALID)) & ((n2_proposal_1_n0!=INVALID&n2_proposal_1_n0=n2_proposal_1_n1)|(n2_proposal_1_n2!=INVALID&n2_proposal_1_n2=n2_proposal_1_n1)) ->         (n2_state_ts_1_n2'=n2_proposal_1_n1) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_proposal_1_n1);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n1` here.)
    [n2_process_proposal_assign_state_1_using_n1] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_1_n0!=INVALID&n2_proposal_1_n1!=INVALID)|(n2_proposal_1_n0!=INVALID&n2_proposal_1_n2!=INVALID)|(n2_proposal_1_n1!=INVALID&n2_proposal_1_n2!=INVALID)) & !((n2_proposal_1_n0!=INVALID&n2_proposal_1_n0=n2_proposal_1_n1)|(n2_proposal_1_n2!=INVALID&n2_proposal_1_n2=n2_proposal_1_n1)) ->         (n2_state_ts_1_n2'=BOT) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 2 for seq 1.
    [n2_process_proposal_from_n2_for_seq1] n2_stage=p1_stage & n2_recv_ready=true & n2_recv_from=2 & n2_recv_type=cmd_proposal & n2_recv_seq=1->         (n2_recv_ready'=false) & (n2_proposal_1_n2'=n2_recv_cmd_ts);
    // Try to assign the state using the proposal from node 2 for seq 1 when we have enough proposals.
    [n2_process_proposal_assign_state_1_using_n2] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_1_n0!=INVALID&n2_proposal_1_n1!=INVALID)|(n2_proposal_1_n0!=INVALID&n2_proposal_1_n2!=INVALID)|(n2_proposal_1_n1!=INVALID&n2_proposal_1_n2!=INVALID)) & ((n2_proposal_1_n0!=INVALID&n2_proposal_1_n0=n2_proposal_1_n2)|(n2_proposal_1_n1!=INVALID&n2_proposal_1_n1=n2_proposal_1_n2)) ->         (n2_state_ts_1_n2'=n2_proposal_1_n2) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_proposal_1_n2);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n2` here.)
    [n2_process_proposal_assign_state_1_using_n2] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_1_n0!=INVALID&n2_proposal_1_n1!=INVALID)|(n2_proposal_1_n0!=INVALID&n2_proposal_1_n2!=INVALID)|(n2_proposal_1_n1!=INVALID&n2_proposal_1_n2!=INVALID)) & !((n2_proposal_1_n0!=INVALID&n2_proposal_1_n0=n2_proposal_1_n2)|(n2_proposal_1_n1!=INVALID&n2_proposal_1_n1=n2_proposal_1_n2)) ->         (n2_state_ts_1_n2'=BOT) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 0 for seq 2.
    [n2_process_proposal_from_n0_for_seq2] n2_stage=p1_stage & n2_recv_ready=true & n2_recv_from=0 & n2_recv_type=cmd_proposal & n2_recv_seq=2->         (n2_recv_ready'=false) & (n2_proposal_2_n0'=n2_recv_cmd_ts);
    // Try to assign the state using the proposal from node 0 for seq 2 when we have enough proposals.
    [n2_process_proposal_assign_state_2_using_n0] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_2_n0!=INVALID&n2_proposal_2_n1!=INVALID)|(n2_proposal_2_n0!=INVALID&n2_proposal_2_n2!=INVALID)|(n2_proposal_2_n1!=INVALID&n2_proposal_2_n2!=INVALID)) & ((n2_proposal_2_n1!=INVALID&n2_proposal_2_n1=n2_proposal_2_n0)|(n2_proposal_2_n2!=INVALID&n2_proposal_2_n2=n2_proposal_2_n0)) ->         (n2_state_ts_2_n2'=n2_proposal_2_n0) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_proposal_2_n0);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n0` here.)
    [n2_process_proposal_assign_state_2_using_n0] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_2_n0!=INVALID&n2_proposal_2_n1!=INVALID)|(n2_proposal_2_n0!=INVALID&n2_proposal_2_n2!=INVALID)|(n2_proposal_2_n1!=INVALID&n2_proposal_2_n2!=INVALID)) & !((n2_proposal_2_n1!=INVALID&n2_proposal_2_n1=n2_proposal_2_n0)|(n2_proposal_2_n2!=INVALID&n2_proposal_2_n2=n2_proposal_2_n0)) ->         (n2_state_ts_2_n2'=BOT) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 1 for seq 2.
    [n2_process_proposal_from_n1_for_seq2] n2_stage=p1_stage & n2_recv_ready=true & n2_recv_from=1 & n2_recv_type=cmd_proposal & n2_recv_seq=2->         (n2_recv_ready'=false) & (n2_proposal_2_n1'=n2_recv_cmd_ts);
    // Try to assign the state using the proposal from node 1 for seq 2 when we have enough proposals.
    [n2_process_proposal_assign_state_2_using_n1] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_2_n0!=INVALID&n2_proposal_2_n1!=INVALID)|(n2_proposal_2_n0!=INVALID&n2_proposal_2_n2!=INVALID)|(n2_proposal_2_n1!=INVALID&n2_proposal_2_n2!=INVALID)) & ((n2_proposal_2_n0!=INVALID&n2_proposal_2_n0=n2_proposal_2_n1)|(n2_proposal_2_n2!=INVALID&n2_proposal_2_n2=n2_proposal_2_n1)) ->         (n2_state_ts_2_n2'=n2_proposal_2_n1) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_proposal_2_n1);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n1` here.)
    [n2_process_proposal_assign_state_2_using_n1] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_2_n0!=INVALID&n2_proposal_2_n1!=INVALID)|(n2_proposal_2_n0!=INVALID&n2_proposal_2_n2!=INVALID)|(n2_proposal_2_n1!=INVALID&n2_proposal_2_n2!=INVALID)) & !((n2_proposal_2_n0!=INVALID&n2_proposal_2_n0=n2_proposal_2_n1)|(n2_proposal_2_n2!=INVALID&n2_proposal_2_n2=n2_proposal_2_n1)) ->         (n2_state_ts_2_n2'=BOT) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT);
    // Try to receive the proposal from node 2 for seq 2.
    [n2_process_proposal_from_n2_for_seq2] n2_stage=p1_stage & n2_recv_ready=true & n2_recv_from=2 & n2_recv_type=cmd_proposal & n2_recv_seq=2->         (n2_recv_ready'=false) & (n2_proposal_2_n2'=n2_recv_cmd_ts);
    // Try to assign the state using the proposal from node 2 for seq 2 when we have enough proposals.
    [n2_process_proposal_assign_state_2_using_n2] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_2_n0!=INVALID&n2_proposal_2_n1!=INVALID)|(n2_proposal_2_n0!=INVALID&n2_proposal_2_n2!=INVALID)|(n2_proposal_2_n1!=INVALID&n2_proposal_2_n2!=INVALID)) & ((n2_proposal_2_n0!=INVALID&n2_proposal_2_n0=n2_proposal_2_n2)|(n2_proposal_2_n1!=INVALID&n2_proposal_2_n1=n2_proposal_2_n2)) ->         (n2_state_ts_2_n2'=n2_proposal_2_n2) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_proposal_2_n2);
    // We got enough proposals but no enough same proposals, thus assigning BOT. (TODO: change the action name, we may not need `_using_n2` here.)
    [n2_process_proposal_assign_state_2_using_n2] n2_stage=p1_stage & n2_send_ready=false & ((n2_proposal_2_n0!=INVALID&n2_proposal_2_n1!=INVALID)|(n2_proposal_2_n0!=INVALID&n2_proposal_2_n2!=INVALID)|(n2_proposal_2_n1!=INVALID&n2_proposal_2_n2!=INVALID)) & !((n2_proposal_2_n0!=INVALID&n2_proposal_2_n0=n2_proposal_2_n2)|(n2_proposal_2_n1!=INVALID&n2_proposal_2_n1=n2_proposal_2_n2)) ->         (n2_state_ts_2_n2'=BOT) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT);

    // Process when a State pkt is ready.
    [n2_drop_recv_if_state_in_p2s] n2_stage=p2s_stage & n2_recv_ready=true & n2_recv_type!=cmd_state -> (n2_recv_ready'=false);
    
    // Try to receive the state from node 0 for seq 0.
    [n2_process_state_from_n0_for_seq_0] n2_stage=p2s_stage & n2_recv_ready=true & n2_recv_from=0 & n2_recv_type=cmd_state & n2_recv_seq=0 ->         (n2_recv_ready'=false) & (n2_state_ts_0_n0'=n2_recv_cmd_ts);
    // Try to assign the state using the state from node 0 for seq 0 when we have enough states.
    [n2_process_state_assign_vote_0_using_n0] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n1!=INVALID)|(n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n2!=INVALID)|(n2_state_ts_0_n1!=INVALID&n2_state_ts_0_n2!=INVALID)) &  ((n2_state_ts_0_n1!=INVALID&n2_state_ts_0_n1=n2_state_ts_0_n0)|(n2_state_ts_0_n2!=INVALID&n2_state_ts_0_n2=n2_state_ts_0_n0)) ->         (n2_vote_ts_0_n2'=n2_state_ts_0_n0) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=n2_state_ts_0_n0);
    // We got enough states but no enough same states, thus assigning BOT.
    [n2_process_state_assign_vote_0_using_n0] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n1!=INVALID)|(n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n2!=INVALID)|(n2_state_ts_0_n1!=INVALID&n2_state_ts_0_n2!=INVALID)) & !((n2_state_ts_0_n1!=INVALID&n2_state_ts_0_n1=n2_state_ts_0_n0)|(n2_state_ts_0_n2!=INVALID&n2_state_ts_0_n2=n2_state_ts_0_n0)) ->         (n2_vote_ts_0_n2'=QUES_VOTE) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=BOT);
    // Try to receive the state from node 1 for seq 0.
    [n2_process_state_from_n1_for_seq_0] n2_stage=p2s_stage & n2_recv_ready=true & n2_recv_from=1 & n2_recv_type=cmd_state & n2_recv_seq=0 ->         (n2_recv_ready'=false) & (n2_state_ts_0_n1'=n2_recv_cmd_ts);
    // Try to assign the state using the state from node 1 for seq 0 when we have enough states.
    [n2_process_state_assign_vote_0_using_n1] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n1!=INVALID)|(n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n2!=INVALID)|(n2_state_ts_0_n1!=INVALID&n2_state_ts_0_n2!=INVALID)) &  ((n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n0=n2_state_ts_0_n1)|(n2_state_ts_0_n2!=INVALID&n2_state_ts_0_n2=n2_state_ts_0_n1)) ->         (n2_vote_ts_0_n2'=n2_state_ts_0_n1) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=n2_state_ts_0_n1);
    // We got enough states but no enough same states, thus assigning BOT.
    [n2_process_state_assign_vote_0_using_n1] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n1!=INVALID)|(n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n2!=INVALID)|(n2_state_ts_0_n1!=INVALID&n2_state_ts_0_n2!=INVALID)) & !((n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n0=n2_state_ts_0_n1)|(n2_state_ts_0_n2!=INVALID&n2_state_ts_0_n2=n2_state_ts_0_n1)) ->         (n2_vote_ts_0_n2'=QUES_VOTE) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=BOT);
    // Try to receive the state from node 2 for seq 0.
    [n2_process_state_from_n2_for_seq_0] n2_stage=p2s_stage & n2_recv_ready=true & n2_recv_from=2 & n2_recv_type=cmd_state & n2_recv_seq=0 ->         (n2_recv_ready'=false) & (n2_state_ts_0_n2'=n2_recv_cmd_ts);
    // Try to assign the state using the state from node 2 for seq 0 when we have enough states.
    [n2_process_state_assign_vote_0_using_n2] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n1!=INVALID)|(n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n2!=INVALID)|(n2_state_ts_0_n1!=INVALID&n2_state_ts_0_n2!=INVALID)) &  ((n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n0=n2_state_ts_0_n2)|(n2_state_ts_0_n1!=INVALID&n2_state_ts_0_n1=n2_state_ts_0_n2)) ->         (n2_vote_ts_0_n2'=n2_state_ts_0_n2) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=n2_state_ts_0_n2);
    // We got enough states but no enough same states, thus assigning BOT.
    [n2_process_state_assign_vote_0_using_n2] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n1!=INVALID)|(n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n2!=INVALID)|(n2_state_ts_0_n1!=INVALID&n2_state_ts_0_n2!=INVALID)) & !((n2_state_ts_0_n0!=INVALID&n2_state_ts_0_n0=n2_state_ts_0_n2)|(n2_state_ts_0_n1!=INVALID&n2_state_ts_0_n1=n2_state_ts_0_n2)) ->         (n2_vote_ts_0_n2'=QUES_VOTE) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=BOT);
    // Try to receive the state from node 0 for seq 1.
    [n2_process_state_from_n0_for_seq_1] n2_stage=p2s_stage & n2_recv_ready=true & n2_recv_from=0 & n2_recv_type=cmd_state & n2_recv_seq=1 ->         (n2_recv_ready'=false) & (n2_state_ts_1_n0'=n2_recv_cmd_ts);
    // Try to assign the state using the state from node 0 for seq 1 when we have enough states.
    [n2_process_state_assign_vote_1_using_n0] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n1!=INVALID)|(n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n2!=INVALID)|(n2_state_ts_1_n1!=INVALID&n2_state_ts_1_n2!=INVALID)) &  ((n2_state_ts_1_n1!=INVALID&n2_state_ts_1_n1=n2_state_ts_1_n0)|(n2_state_ts_1_n2!=INVALID&n2_state_ts_1_n2=n2_state_ts_1_n0)) ->         (n2_vote_ts_1_n2'=n2_state_ts_1_n0) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=n2_state_ts_1_n0);
    // We got enough states but no enough same states, thus assigning BOT.
    [n2_process_state_assign_vote_1_using_n0] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n1!=INVALID)|(n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n2!=INVALID)|(n2_state_ts_1_n1!=INVALID&n2_state_ts_1_n2!=INVALID)) & !((n2_state_ts_1_n1!=INVALID&n2_state_ts_1_n1=n2_state_ts_1_n0)|(n2_state_ts_1_n2!=INVALID&n2_state_ts_1_n2=n2_state_ts_1_n0)) ->         (n2_vote_ts_1_n2'=QUES_VOTE) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=BOT);
    // Try to receive the state from node 1 for seq 1.
    [n2_process_state_from_n1_for_seq_1] n2_stage=p2s_stage & n2_recv_ready=true & n2_recv_from=1 & n2_recv_type=cmd_state & n2_recv_seq=1 ->         (n2_recv_ready'=false) & (n2_state_ts_1_n1'=n2_recv_cmd_ts);
    // Try to assign the state using the state from node 1 for seq 1 when we have enough states.
    [n2_process_state_assign_vote_1_using_n1] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n1!=INVALID)|(n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n2!=INVALID)|(n2_state_ts_1_n1!=INVALID&n2_state_ts_1_n2!=INVALID)) &  ((n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n0=n2_state_ts_1_n1)|(n2_state_ts_1_n2!=INVALID&n2_state_ts_1_n2=n2_state_ts_1_n1)) ->         (n2_vote_ts_1_n2'=n2_state_ts_1_n1) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=n2_state_ts_1_n1);
    // We got enough states but no enough same states, thus assigning BOT.
    [n2_process_state_assign_vote_1_using_n1] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n1!=INVALID)|(n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n2!=INVALID)|(n2_state_ts_1_n1!=INVALID&n2_state_ts_1_n2!=INVALID)) & !((n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n0=n2_state_ts_1_n1)|(n2_state_ts_1_n2!=INVALID&n2_state_ts_1_n2=n2_state_ts_1_n1)) ->         (n2_vote_ts_1_n2'=QUES_VOTE) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=BOT);
    // Try to receive the state from node 2 for seq 1.
    [n2_process_state_from_n2_for_seq_1] n2_stage=p2s_stage & n2_recv_ready=true & n2_recv_from=2 & n2_recv_type=cmd_state & n2_recv_seq=1 ->         (n2_recv_ready'=false) & (n2_state_ts_1_n2'=n2_recv_cmd_ts);
    // Try to assign the state using the state from node 2 for seq 1 when we have enough states.
    [n2_process_state_assign_vote_1_using_n2] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n1!=INVALID)|(n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n2!=INVALID)|(n2_state_ts_1_n1!=INVALID&n2_state_ts_1_n2!=INVALID)) &  ((n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n0=n2_state_ts_1_n2)|(n2_state_ts_1_n1!=INVALID&n2_state_ts_1_n1=n2_state_ts_1_n2)) ->         (n2_vote_ts_1_n2'=n2_state_ts_1_n2) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=n2_state_ts_1_n2);
    // We got enough states but no enough same states, thus assigning BOT.
    [n2_process_state_assign_vote_1_using_n2] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n1!=INVALID)|(n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n2!=INVALID)|(n2_state_ts_1_n1!=INVALID&n2_state_ts_1_n2!=INVALID)) & !((n2_state_ts_1_n0!=INVALID&n2_state_ts_1_n0=n2_state_ts_1_n2)|(n2_state_ts_1_n1!=INVALID&n2_state_ts_1_n1=n2_state_ts_1_n2)) ->         (n2_vote_ts_1_n2'=QUES_VOTE) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=BOT);
    // Try to receive the state from node 0 for seq 2.
    [n2_process_state_from_n0_for_seq_2] n2_stage=p2s_stage & n2_recv_ready=true & n2_recv_from=0 & n2_recv_type=cmd_state & n2_recv_seq=2 ->         (n2_recv_ready'=false) & (n2_state_ts_2_n0'=n2_recv_cmd_ts);
    // Try to assign the state using the state from node 0 for seq 2 when we have enough states.
    [n2_process_state_assign_vote_2_using_n0] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n1!=INVALID)|(n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n2!=INVALID)|(n2_state_ts_2_n1!=INVALID&n2_state_ts_2_n2!=INVALID)) &  ((n2_state_ts_2_n1!=INVALID&n2_state_ts_2_n1=n2_state_ts_2_n0)|(n2_state_ts_2_n2!=INVALID&n2_state_ts_2_n2=n2_state_ts_2_n0)) ->         (n2_vote_ts_2_n2'=n2_state_ts_2_n0) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=n2_state_ts_2_n0);
    // We got enough states but no enough same states, thus assigning BOT.
    [n2_process_state_assign_vote_2_using_n0] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n1!=INVALID)|(n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n2!=INVALID)|(n2_state_ts_2_n1!=INVALID&n2_state_ts_2_n2!=INVALID)) & !((n2_state_ts_2_n1!=INVALID&n2_state_ts_2_n1=n2_state_ts_2_n0)|(n2_state_ts_2_n2!=INVALID&n2_state_ts_2_n2=n2_state_ts_2_n0)) ->         (n2_vote_ts_2_n2'=QUES_VOTE) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=BOT);
    // Try to receive the state from node 1 for seq 2.
    [n2_process_state_from_n1_for_seq_2] n2_stage=p2s_stage & n2_recv_ready=true & n2_recv_from=1 & n2_recv_type=cmd_state & n2_recv_seq=2 ->         (n2_recv_ready'=false) & (n2_state_ts_2_n1'=n2_recv_cmd_ts);
    // Try to assign the state using the state from node 1 for seq 2 when we have enough states.
    [n2_process_state_assign_vote_2_using_n1] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n1!=INVALID)|(n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n2!=INVALID)|(n2_state_ts_2_n1!=INVALID&n2_state_ts_2_n2!=INVALID)) &  ((n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n0=n2_state_ts_2_n1)|(n2_state_ts_2_n2!=INVALID&n2_state_ts_2_n2=n2_state_ts_2_n1)) ->         (n2_vote_ts_2_n2'=n2_state_ts_2_n1) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=n2_state_ts_2_n1);
    // We got enough states but no enough same states, thus assigning BOT.
    [n2_process_state_assign_vote_2_using_n1] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n1!=INVALID)|(n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n2!=INVALID)|(n2_state_ts_2_n1!=INVALID&n2_state_ts_2_n2!=INVALID)) & !((n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n0=n2_state_ts_2_n1)|(n2_state_ts_2_n2!=INVALID&n2_state_ts_2_n2=n2_state_ts_2_n1)) ->         (n2_vote_ts_2_n2'=QUES_VOTE) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=BOT);
    // Try to receive the state from node 2 for seq 2.
    [n2_process_state_from_n2_for_seq_2] n2_stage=p2s_stage & n2_recv_ready=true & n2_recv_from=2 & n2_recv_type=cmd_state & n2_recv_seq=2 ->         (n2_recv_ready'=false) & (n2_state_ts_2_n2'=n2_recv_cmd_ts);
    // Try to assign the state using the state from node 2 for seq 2 when we have enough states.
    [n2_process_state_assign_vote_2_using_n2] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n1!=INVALID)|(n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n2!=INVALID)|(n2_state_ts_2_n1!=INVALID&n2_state_ts_2_n2!=INVALID)) &  ((n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n0=n2_state_ts_2_n2)|(n2_state_ts_2_n1!=INVALID&n2_state_ts_2_n1=n2_state_ts_2_n2)) ->         (n2_vote_ts_2_n2'=n2_state_ts_2_n2) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=n2_state_ts_2_n2);
    // We got enough states but no enough same states, thus assigning BOT.
    [n2_process_state_assign_vote_2_using_n2] n2_stage=p2s_stage & n2_send_ready=false & ((n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n1!=INVALID)|(n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n2!=INVALID)|(n2_state_ts_2_n1!=INVALID&n2_state_ts_2_n2!=INVALID)) & !((n2_state_ts_2_n0!=INVALID&n2_state_ts_2_n0=n2_state_ts_2_n2)|(n2_state_ts_2_n1!=INVALID&n2_state_ts_2_n1=n2_state_ts_2_n2)) ->         (n2_vote_ts_2_n2'=QUES_VOTE) & (n2_stage'=p2v_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_vote) & (n2_send_cmd_ts'=BOT);

    // Process when a Vote pkt is ready.
    [n2_drop_recv_if_vote_in_p2v] n2_stage=p2v_stage & n2_recv_ready=true & n2_recv_type!=cmd_vote -> (n2_recv_ready'=false);
    
    // Try to receive the vote from node 0 for seq 0.
    [n2_process_vote_from_n0_for_seq0] n2_stage=p2v_stage & n2_recv_ready=true & n2_recv_from=0 & n2_recv_type=cmd_vote & n2_recv_seq=0 ->         (n2_recv_ready'=false) & (n2_vote_ts_0_n0'=n2_recv_cmd_ts);
    // Try to use the vote from node 0 for seq 0 when we have enough same votes, and return.
    [n2_process_vote_for_seq0_using_n0] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0!=QUES_VOTE) & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) &  ((n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1=n2_vote_ts_0_n0)|(n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2=n2_vote_ts_0_n0)) ->         (n2_log_ts_0'=n2_vote_ts_0_n0) & (n2_stage'=p1_stage) & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    // We don't have enough same votes, but we have the vote from 0 that is not QUES_VOTE.
    [n2_process_vote_for_seq0_using_n0] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0!=QUES_VOTE) & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) & !((n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1=n2_vote_ts_0_n0)|(n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2=n2_vote_ts_0_n0)) ->         (n2_state_ts_0_n2'=n2_vote_ts_0_n0) & (n2_vote_ts_0_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_0_n0) & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n2_process_vote_for_seq0_using_n0] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) & n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0=QUES_VOTE&n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1=QUES_VOTE&n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2=QUES_VOTE ->         (n2_state_ts_0_n2'=BOT)                      & (n2_vote_ts_0_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT)                      & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    [n2_process_vote_for_seq0_using_n0] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) & n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0=QUES_VOTE&n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1=QUES_VOTE&n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2=QUES_VOTE ->         (n2_state_ts_0_n2'=n2_state_ts_0_n0) & (n2_vote_ts_0_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_0_n0) & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    // Try to receive the vote from node 1 for seq 0.
    [n2_process_vote_from_n1_for_seq0] n2_stage=p2v_stage & n2_recv_ready=true & n2_recv_from=1 & n2_recv_type=cmd_vote & n2_recv_seq=0 ->         (n2_recv_ready'=false) & (n2_vote_ts_0_n1'=n2_recv_cmd_ts);
    // Try to use the vote from node 1 for seq 0 when we have enough same votes, and return.
    [n2_process_vote_for_seq0_using_n1] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1!=QUES_VOTE) & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) &  ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0=n2_vote_ts_0_n1)|(n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2=n2_vote_ts_0_n1)) ->         (n2_log_ts_0'=n2_vote_ts_0_n1) & (n2_stage'=p1_stage) & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    // We don't have enough same votes, but we have the vote from 1 that is not QUES_VOTE.
    [n2_process_vote_for_seq0_using_n1] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1!=QUES_VOTE) & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) & !((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0=n2_vote_ts_0_n1)|(n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2=n2_vote_ts_0_n1)) ->         (n2_state_ts_0_n2'=n2_vote_ts_0_n1) & (n2_vote_ts_0_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_0_n1) & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n2_process_vote_for_seq0_using_n1] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) & n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0=QUES_VOTE&n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1=QUES_VOTE&n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2=QUES_VOTE ->         (n2_state_ts_0_n2'=BOT)                      & (n2_vote_ts_0_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT)                      & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    [n2_process_vote_for_seq0_using_n1] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) & n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0=QUES_VOTE&n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1=QUES_VOTE&n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2=QUES_VOTE ->         (n2_state_ts_0_n2'=n2_state_ts_0_n1) & (n2_vote_ts_0_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_0_n1) & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    // Try to receive the vote from node 2 for seq 0.
    [n2_process_vote_from_n2_for_seq0] n2_stage=p2v_stage & n2_recv_ready=true & n2_recv_from=2 & n2_recv_type=cmd_vote & n2_recv_seq=0 ->         (n2_recv_ready'=false) & (n2_vote_ts_0_n2'=n2_recv_cmd_ts);
    // Try to use the vote from node 2 for seq 0 when we have enough same votes, and return.
    [n2_process_vote_for_seq0_using_n2] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2!=QUES_VOTE) & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) &  ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0=n2_vote_ts_0_n2)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1=n2_vote_ts_0_n2)) ->         (n2_log_ts_0'=n2_vote_ts_0_n2) & (n2_stage'=p1_stage) & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    // We don't have enough same votes, but we have the vote from 2 that is not QUES_VOTE.
    [n2_process_vote_for_seq0_using_n2] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2!=QUES_VOTE) & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) & !((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0=n2_vote_ts_0_n2)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1=n2_vote_ts_0_n2)) ->         (n2_state_ts_0_n2'=n2_vote_ts_0_n2) & (n2_vote_ts_0_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_0_n2) & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n2_process_vote_for_seq0_using_n2] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) & n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0=QUES_VOTE&n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1=QUES_VOTE&n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2=QUES_VOTE ->         (n2_state_ts_0_n2'=BOT)                      & (n2_vote_ts_0_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT)                      & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    [n2_process_vote_for_seq0_using_n2] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n1!=INVALID)|(n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n2!=INVALID)|(n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n2!=INVALID)) & n2_vote_ts_0_n0!=INVALID&n2_vote_ts_0_n0=QUES_VOTE&n2_vote_ts_0_n1!=INVALID&n2_vote_ts_0_n1=QUES_VOTE&n2_vote_ts_0_n2!=INVALID&n2_vote_ts_0_n2=QUES_VOTE ->         (n2_state_ts_0_n2'=n2_state_ts_0_n2) & (n2_vote_ts_0_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_0_n2) & (n2_state_ts_0_n0'=INVALID)&(n2_vote_ts_0_n0'=INVALID)&(n2_state_ts_0_n1'=INVALID)&(n2_vote_ts_0_n1'=INVALID);
    // Try to receive the vote from node 0 for seq 1.
    [n2_process_vote_from_n0_for_seq1] n2_stage=p2v_stage & n2_recv_ready=true & n2_recv_from=0 & n2_recv_type=cmd_vote & n2_recv_seq=1 ->         (n2_recv_ready'=false) & (n2_vote_ts_1_n0'=n2_recv_cmd_ts);
    // Try to use the vote from node 0 for seq 1 when we have enough same votes, and return.
    [n2_process_vote_for_seq1_using_n0] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0!=QUES_VOTE) & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) &  ((n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1=n2_vote_ts_1_n0)|(n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2=n2_vote_ts_1_n0)) ->         (n2_log_ts_1'=n2_vote_ts_1_n0) & (n2_stage'=p1_stage) & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    // We don't have enough same votes, but we have the vote from 0 that is not QUES_VOTE.
    [n2_process_vote_for_seq1_using_n0] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0!=QUES_VOTE) & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) & !((n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1=n2_vote_ts_1_n0)|(n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2=n2_vote_ts_1_n0)) ->         (n2_state_ts_1_n2'=n2_vote_ts_1_n0) & (n2_vote_ts_1_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_1_n0) & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n2_process_vote_for_seq1_using_n0] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) & n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0=QUES_VOTE&n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1=QUES_VOTE&n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2=QUES_VOTE ->         (n2_state_ts_1_n2'=BOT)                      & (n2_vote_ts_1_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT)                      & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    [n2_process_vote_for_seq1_using_n0] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) & n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0=QUES_VOTE&n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1=QUES_VOTE&n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2=QUES_VOTE ->         (n2_state_ts_1_n2'=n2_state_ts_1_n0) & (n2_vote_ts_1_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_1_n0) & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    // Try to receive the vote from node 1 for seq 1.
    [n2_process_vote_from_n1_for_seq1] n2_stage=p2v_stage & n2_recv_ready=true & n2_recv_from=1 & n2_recv_type=cmd_vote & n2_recv_seq=1 ->         (n2_recv_ready'=false) & (n2_vote_ts_1_n1'=n2_recv_cmd_ts);
    // Try to use the vote from node 1 for seq 1 when we have enough same votes, and return.
    [n2_process_vote_for_seq1_using_n1] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1!=QUES_VOTE) & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) &  ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0=n2_vote_ts_1_n1)|(n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2=n2_vote_ts_1_n1)) ->         (n2_log_ts_1'=n2_vote_ts_1_n1) & (n2_stage'=p1_stage) & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    // We don't have enough same votes, but we have the vote from 1 that is not QUES_VOTE.
    [n2_process_vote_for_seq1_using_n1] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1!=QUES_VOTE) & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) & !((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0=n2_vote_ts_1_n1)|(n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2=n2_vote_ts_1_n1)) ->         (n2_state_ts_1_n2'=n2_vote_ts_1_n1) & (n2_vote_ts_1_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_1_n1) & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n2_process_vote_for_seq1_using_n1] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) & n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0=QUES_VOTE&n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1=QUES_VOTE&n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2=QUES_VOTE ->         (n2_state_ts_1_n2'=BOT)                      & (n2_vote_ts_1_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT)                      & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    [n2_process_vote_for_seq1_using_n1] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) & n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0=QUES_VOTE&n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1=QUES_VOTE&n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2=QUES_VOTE ->         (n2_state_ts_1_n2'=n2_state_ts_1_n1) & (n2_vote_ts_1_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_1_n1) & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    // Try to receive the vote from node 2 for seq 1.
    [n2_process_vote_from_n2_for_seq1] n2_stage=p2v_stage & n2_recv_ready=true & n2_recv_from=2 & n2_recv_type=cmd_vote & n2_recv_seq=1 ->         (n2_recv_ready'=false) & (n2_vote_ts_1_n2'=n2_recv_cmd_ts);
    // Try to use the vote from node 2 for seq 1 when we have enough same votes, and return.
    [n2_process_vote_for_seq1_using_n2] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2!=QUES_VOTE) & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) &  ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0=n2_vote_ts_1_n2)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1=n2_vote_ts_1_n2)) ->         (n2_log_ts_1'=n2_vote_ts_1_n2) & (n2_stage'=p1_stage) & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    // We don't have enough same votes, but we have the vote from 2 that is not QUES_VOTE.
    [n2_process_vote_for_seq1_using_n2] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2!=QUES_VOTE) & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) & !((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0=n2_vote_ts_1_n2)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1=n2_vote_ts_1_n2)) ->         (n2_state_ts_1_n2'=n2_vote_ts_1_n2) & (n2_vote_ts_1_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_1_n2) & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n2_process_vote_for_seq1_using_n2] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) & n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0=QUES_VOTE&n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1=QUES_VOTE&n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2=QUES_VOTE ->         (n2_state_ts_1_n2'=BOT)                      & (n2_vote_ts_1_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT)                      & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    [n2_process_vote_for_seq1_using_n2] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n1!=INVALID)|(n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n2!=INVALID)|(n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n2!=INVALID)) & n2_vote_ts_1_n0!=INVALID&n2_vote_ts_1_n0=QUES_VOTE&n2_vote_ts_1_n1!=INVALID&n2_vote_ts_1_n1=QUES_VOTE&n2_vote_ts_1_n2!=INVALID&n2_vote_ts_1_n2=QUES_VOTE ->         (n2_state_ts_1_n2'=n2_state_ts_1_n2) & (n2_vote_ts_1_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_1_n2) & (n2_state_ts_1_n0'=INVALID)&(n2_vote_ts_1_n0'=INVALID)&(n2_state_ts_1_n1'=INVALID)&(n2_vote_ts_1_n1'=INVALID);
    // Try to receive the vote from node 0 for seq 2.
    [n2_process_vote_from_n0_for_seq2] n2_stage=p2v_stage & n2_recv_ready=true & n2_recv_from=0 & n2_recv_type=cmd_vote & n2_recv_seq=2 ->         (n2_recv_ready'=false) & (n2_vote_ts_2_n0'=n2_recv_cmd_ts);
    // Try to use the vote from node 0 for seq 2 when we have enough same votes, and return.
    [n2_process_vote_for_seq2_using_n0] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0!=QUES_VOTE) & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) &  ((n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1=n2_vote_ts_2_n0)|(n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2=n2_vote_ts_2_n0)) ->         (n2_log_ts_2'=n2_vote_ts_2_n0) & (n2_stage'=p1_stage) & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);
    // We don't have enough same votes, but we have the vote from 0 that is not QUES_VOTE.
    [n2_process_vote_for_seq2_using_n0] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0!=QUES_VOTE) & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) & !((n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1=n2_vote_ts_2_n0)|(n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2=n2_vote_ts_2_n0)) ->         (n2_state_ts_2_n2'=n2_vote_ts_2_n0) & (n2_vote_ts_2_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_2_n0) & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n2_process_vote_for_seq2_using_n0] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) & n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0=QUES_VOTE&n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1=QUES_VOTE&n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2=QUES_VOTE ->         (n2_state_ts_2_n2'=BOT)                      & (n2_vote_ts_2_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT)                      & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);
    [n2_process_vote_for_seq2_using_n0] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) & n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0=QUES_VOTE&n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1=QUES_VOTE&n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2=QUES_VOTE ->         (n2_state_ts_2_n2'=n2_state_ts_2_n0) & (n2_vote_ts_2_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_2_n0) & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);
    // Try to receive the vote from node 1 for seq 2.
    [n2_process_vote_from_n1_for_seq2] n2_stage=p2v_stage & n2_recv_ready=true & n2_recv_from=1 & n2_recv_type=cmd_vote & n2_recv_seq=2 ->         (n2_recv_ready'=false) & (n2_vote_ts_2_n1'=n2_recv_cmd_ts);
    // Try to use the vote from node 1 for seq 2 when we have enough same votes, and return.
    [n2_process_vote_for_seq2_using_n1] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1!=QUES_VOTE) & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) &  ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0=n2_vote_ts_2_n1)|(n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2=n2_vote_ts_2_n1)) ->         (n2_log_ts_2'=n2_vote_ts_2_n1) & (n2_stage'=p1_stage) & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);
    // We don't have enough same votes, but we have the vote from 1 that is not QUES_VOTE.
    [n2_process_vote_for_seq2_using_n1] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1!=QUES_VOTE) & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) & !((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0=n2_vote_ts_2_n1)|(n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2=n2_vote_ts_2_n1)) ->         (n2_state_ts_2_n2'=n2_vote_ts_2_n1) & (n2_vote_ts_2_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_2_n1) & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n2_process_vote_for_seq2_using_n1] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) & n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0=QUES_VOTE&n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1=QUES_VOTE&n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2=QUES_VOTE ->         (n2_state_ts_2_n2'=BOT)                      & (n2_vote_ts_2_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT)                      & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);
    [n2_process_vote_for_seq2_using_n1] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) & n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0=QUES_VOTE&n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1=QUES_VOTE&n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2=QUES_VOTE ->         (n2_state_ts_2_n2'=n2_state_ts_2_n1) & (n2_vote_ts_2_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_2_n1) & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);
    // Try to receive the vote from node 2 for seq 2.
    [n2_process_vote_from_n2_for_seq2] n2_stage=p2v_stage & n2_recv_ready=true & n2_recv_from=2 & n2_recv_type=cmd_vote & n2_recv_seq=2 ->         (n2_recv_ready'=false) & (n2_vote_ts_2_n2'=n2_recv_cmd_ts);
    // Try to use the vote from node 2 for seq 2 when we have enough same votes, and return.
    [n2_process_vote_for_seq2_using_n2] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2!=QUES_VOTE) & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) &  ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0=n2_vote_ts_2_n2)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1=n2_vote_ts_2_n2)) ->         (n2_log_ts_2'=n2_vote_ts_2_n2) & (n2_stage'=p1_stage) & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);
    // We don't have enough same votes, but we have the vote from 2 that is not QUES_VOTE.
    [n2_process_vote_for_seq2_using_n2] n2_stage=p2v_stage & n2_send_ready=false & (n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2!=QUES_VOTE) & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) & !((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0=n2_vote_ts_2_n2)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1=n2_vote_ts_2_n2)) ->         (n2_state_ts_2_n2'=n2_vote_ts_2_n2) & (n2_vote_ts_2_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_2_n2) & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);
    // We only got QUES_VOTE, let god decides.
    [n2_process_vote_for_seq2_using_n2] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) & n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0=QUES_VOTE&n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1=QUES_VOTE&n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2=QUES_VOTE ->         (n2_state_ts_2_n2'=BOT)                      & (n2_vote_ts_2_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=BOT)                      & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);
    [n2_process_vote_for_seq2_using_n2] n2_stage=p2v_stage & n2_send_ready=false & ((n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n1!=INVALID)|(n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n2!=INVALID)|(n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n2!=INVALID)) & n2_vote_ts_2_n0!=INVALID&n2_vote_ts_2_n0=QUES_VOTE&n2_vote_ts_2_n1!=INVALID&n2_vote_ts_2_n1=QUES_VOTE&n2_vote_ts_2_n2!=INVALID&n2_vote_ts_2_n2=QUES_VOTE ->         (n2_state_ts_2_n2'=n2_state_ts_2_n2) & (n2_vote_ts_2_n2'=INVALID) & (n2_stage'=p2s_stage) & (n2_send_ready'=true) & (n2_send_is_broadcast'=true) & (n2_send_type'=cmd_state) & (n2_send_cmd_ts'=n2_state_ts_2_n2) & (n2_state_ts_2_n0'=INVALID)&(n2_vote_ts_2_n0'=INVALID)&(n2_state_ts_2_n1'=INVALID)&(n2_vote_ts_2_n1'=INVALID);

    // Send when a pkt is ready; Recv when a pkt is ready.
    [recv_02_0] n2_recv_ready=false ->         (n2_recv_ready'=true) & (n2_recv_from'=0) & (n2_recv_type'=w02_pkt_type_0) & (n2_recv_seq'=w02_pkt_seq_0) & (n2_recv_round'=w02_pkt_round_0) & (n2_recv_cmd_ts'=w02_pkt_cmd_ts_0);
    [send_20_0] n2_send_ready=true & n2_send_is_broadcast=false -> (n2_send_ready'=false);
    [recv_12_0] n2_recv_ready=false ->         (n2_recv_ready'=true) & (n2_recv_from'=1) & (n2_recv_type'=w12_pkt_type_0) & (n2_recv_seq'=w12_pkt_seq_0) & (n2_recv_round'=w12_pkt_round_0) & (n2_recv_cmd_ts'=w12_pkt_cmd_ts_0);
    [send_21_0] n2_send_ready=true & n2_send_is_broadcast=false -> (n2_send_ready'=false);
    [recv_02_1] n2_recv_ready=false ->         (n2_recv_ready'=true) & (n2_recv_from'=0) & (n2_recv_type'=w02_pkt_type_1) & (n2_recv_seq'=w02_pkt_seq_1) & (n2_recv_round'=w02_pkt_round_1) & (n2_recv_cmd_ts'=w02_pkt_cmd_ts_1);
    [send_20_1] n2_send_ready=true & n2_send_is_broadcast=false -> (n2_send_ready'=false);
    [recv_12_1] n2_recv_ready=false ->         (n2_recv_ready'=true) & (n2_recv_from'=1) & (n2_recv_type'=w12_pkt_type_1) & (n2_recv_seq'=w12_pkt_seq_1) & (n2_recv_round'=w12_pkt_round_1) & (n2_recv_cmd_ts'=w12_pkt_cmd_ts_1);
    [send_21_1] n2_send_ready=true & n2_send_is_broadcast=false -> (n2_send_ready'=false);
    [recv_02_2] n2_recv_ready=false ->         (n2_recv_ready'=true) & (n2_recv_from'=0) & (n2_recv_type'=w02_pkt_type_2) & (n2_recv_seq'=w02_pkt_seq_2) & (n2_recv_round'=w02_pkt_round_2) & (n2_recv_cmd_ts'=w02_pkt_cmd_ts_2);
    [send_20_2] n2_send_ready=true & n2_send_is_broadcast=false -> (n2_send_ready'=false);
    [recv_12_2] n2_recv_ready=false ->         (n2_recv_ready'=true) & (n2_recv_from'=1) & (n2_recv_type'=w12_pkt_type_2) & (n2_recv_seq'=w12_pkt_seq_2) & (n2_recv_round'=w12_pkt_round_2) & (n2_recv_cmd_ts'=w12_pkt_cmd_ts_2);
    [send_21_2] n2_send_ready=true & n2_send_is_broadcast=false -> (n2_send_ready'=false);
    [n2_send_broadcast] n2_send_ready=true & n2_send_is_broadcast=true -> (n2_send_ready'=false);
    [n2_send_broadcast] n2_send_ready=true & n2_send_is_broadcast=true -> (n2_send_ready'=false);
    [n2_send_broadcast] n2_send_ready=true & n2_send_is_broadcast=true -> (n2_send_ready'=false);

endmodule

module wire01
    // pkt slot 0
    w01_pkt_valid_0 : bool init false;
    w01_pkt_type_0 : [0..NUM_CMD_TYPES] init 0;
    w01_pkt_seq_0 : [0..LOG_SIZE] init 0;
    w01_pkt_round_0 : [0..MAX_ROUND] init 0;
    w01_pkt_cmd_ts_0 : [MIN_TS_VALUE..MAX_TS] init 0;
    // pkt slot 1
    w01_pkt_valid_1 : bool init false;
    w01_pkt_type_1 : [0..NUM_CMD_TYPES] init 0;
    w01_pkt_seq_1 : [0..LOG_SIZE] init 0;
    w01_pkt_round_1 : [0..MAX_ROUND] init 0;
    w01_pkt_cmd_ts_1 : [MIN_TS_VALUE..MAX_TS] init 0;
    // pkt slot 2
    w01_pkt_valid_2 : bool init false;
    w01_pkt_type_2 : [0..NUM_CMD_TYPES] init 0;
    w01_pkt_seq_2 : [0..LOG_SIZE] init 0;
    w01_pkt_round_2 : [0..MAX_ROUND] init 0;
    w01_pkt_cmd_ts_2 : [MIN_TS_VALUE..MAX_TS] init 0;
    [n0_send_broadcast] n0_send_ready=true & n0_send_is_broadcast=true & w01_pkt_valid_0=false ->         (w01_pkt_valid_0'=true) & (w01_pkt_type_0'=n0_send_type) & (w01_pkt_seq_0'=n0_send_seq) & (w01_pkt_round_0'=n0_send_round) & (w01_pkt_cmd_ts_0'=n0_send_cmd_ts);
    [send_01_0] n0_send_ready=true & n0_send_is_broadcast=false & w01_pkt_valid_0 = false & n0_send_ready=true ->         (w01_pkt_valid_0'=true) & (w01_pkt_type_0'=n0_send_type) & (w01_pkt_seq_0'=n0_send_seq) & (w01_pkt_round_0'=n0_send_round) & (w01_pkt_cmd_ts_0'=n0_send_cmd_ts);
    [recv_01_0] n0_recv_ready=false & w01_pkt_valid_0 = true -> (w01_pkt_valid_0'=false);
    [n0_send_broadcast] n0_send_ready=true & n0_send_is_broadcast=true & w01_pkt_valid_1=false ->         (w01_pkt_valid_1'=true) & (w01_pkt_type_1'=n0_send_type) & (w01_pkt_seq_1'=n0_send_seq) & (w01_pkt_round_1'=n0_send_round) & (w01_pkt_cmd_ts_1'=n0_send_cmd_ts);
    [send_01_1] n0_send_ready=true & n0_send_is_broadcast=false & w01_pkt_valid_1 = false & n0_send_ready=true ->         (w01_pkt_valid_1'=true) & (w01_pkt_type_1'=n0_send_type) & (w01_pkt_seq_1'=n0_send_seq) & (w01_pkt_round_1'=n0_send_round) & (w01_pkt_cmd_ts_1'=n0_send_cmd_ts);
    [recv_01_1] n0_recv_ready=false & w01_pkt_valid_1 = true -> (w01_pkt_valid_1'=false);
    [n0_send_broadcast] n0_send_ready=true & n0_send_is_broadcast=true & w01_pkt_valid_2=false ->         (w01_pkt_valid_2'=true) & (w01_pkt_type_2'=n0_send_type) & (w01_pkt_seq_2'=n0_send_seq) & (w01_pkt_round_2'=n0_send_round) & (w01_pkt_cmd_ts_2'=n0_send_cmd_ts);
    [send_01_2] n0_send_ready=true & n0_send_is_broadcast=false & w01_pkt_valid_2 = false & n0_send_ready=true ->         (w01_pkt_valid_2'=true) & (w01_pkt_type_2'=n0_send_type) & (w01_pkt_seq_2'=n0_send_seq) & (w01_pkt_round_2'=n0_send_round) & (w01_pkt_cmd_ts_2'=n0_send_cmd_ts);
    [recv_01_2] n0_recv_ready=false & w01_pkt_valid_2 = true -> (w01_pkt_valid_2'=false);

endmodule
module wire02 = wire01[n0_send_broadcast=n0_send_broadcast,w01_pkt_valid_0=w02_pkt_valid_0,w01_pkt_type_0=w02_pkt_type_0,w01_pkt_seq_0=w02_pkt_seq_0,w01_pkt_round_0=w02_pkt_round_0,w01_pkt_cmd_ts_0=w02_pkt_cmd_ts_0,send_01_0=send_02_0,recv_01_0=recv_02_0,w01_pkt_valid_1=w02_pkt_valid_1,w01_pkt_type_1=w02_pkt_type_1,w01_pkt_seq_1=w02_pkt_seq_1,w01_pkt_round_1=w02_pkt_round_1,w01_pkt_cmd_ts_1=w02_pkt_cmd_ts_1,send_01_1=send_02_1,recv_01_1=recv_02_1,w01_pkt_valid_2=w02_pkt_valid_2,w01_pkt_type_2=w02_pkt_type_2,w01_pkt_seq_2=w02_pkt_seq_2,w01_pkt_round_2=w02_pkt_round_2,w01_pkt_cmd_ts_2=w02_pkt_cmd_ts_2,send_01_2=send_02_2,recv_01_2=recv_02_2,n0_send_ready=n0_send_ready,n0_send_is_broadcast=n0_send_is_broadcast,n0_send_type=n0_send_type,n0_send_seq=n0_send_seq,n0_send_round=n0_send_round,n0_send_cmd_ts=n0_send_cmd_ts] endmodule
     
module wire10 = wire01[n0_send_broadcast=n1_send_broadcast,w01_pkt_valid_0=w10_pkt_valid_0,w01_pkt_type_0=w10_pkt_type_0,w01_pkt_seq_0=w10_pkt_seq_0,w01_pkt_round_0=w10_pkt_round_0,w01_pkt_cmd_ts_0=w10_pkt_cmd_ts_0,send_01_0=send_10_0,recv_01_0=recv_10_0,w01_pkt_valid_1=w10_pkt_valid_1,w01_pkt_type_1=w10_pkt_type_1,w01_pkt_seq_1=w10_pkt_seq_1,w01_pkt_round_1=w10_pkt_round_1,w01_pkt_cmd_ts_1=w10_pkt_cmd_ts_1,send_01_1=send_10_1,recv_01_1=recv_10_1,w01_pkt_valid_2=w10_pkt_valid_2,w01_pkt_type_2=w10_pkt_type_2,w01_pkt_seq_2=w10_pkt_seq_2,w01_pkt_round_2=w10_pkt_round_2,w01_pkt_cmd_ts_2=w10_pkt_cmd_ts_2,send_01_2=send_10_2,recv_01_2=recv_10_2,n0_send_ready=n1_send_ready,n0_send_is_broadcast=n1_send_is_broadcast,n0_send_type=n1_send_type,n0_send_seq=n1_send_seq,n0_send_round=n1_send_round,n0_send_cmd_ts=n1_send_cmd_ts] endmodule
     
module wire12 = wire01[n0_send_broadcast=n1_send_broadcast,w01_pkt_valid_0=w12_pkt_valid_0,w01_pkt_type_0=w12_pkt_type_0,w01_pkt_seq_0=w12_pkt_seq_0,w01_pkt_round_0=w12_pkt_round_0,w01_pkt_cmd_ts_0=w12_pkt_cmd_ts_0,send_01_0=send_12_0,recv_01_0=recv_12_0,w01_pkt_valid_1=w12_pkt_valid_1,w01_pkt_type_1=w12_pkt_type_1,w01_pkt_seq_1=w12_pkt_seq_1,w01_pkt_round_1=w12_pkt_round_1,w01_pkt_cmd_ts_1=w12_pkt_cmd_ts_1,send_01_1=send_12_1,recv_01_1=recv_12_1,w01_pkt_valid_2=w12_pkt_valid_2,w01_pkt_type_2=w12_pkt_type_2,w01_pkt_seq_2=w12_pkt_seq_2,w01_pkt_round_2=w12_pkt_round_2,w01_pkt_cmd_ts_2=w12_pkt_cmd_ts_2,send_01_2=send_12_2,recv_01_2=recv_12_2,n0_send_ready=n1_send_ready,n0_send_is_broadcast=n1_send_is_broadcast,n0_send_type=n1_send_type,n0_send_seq=n1_send_seq,n0_send_round=n1_send_round,n0_send_cmd_ts=n1_send_cmd_ts] endmodule
     
module wire20 = wire01[n0_send_broadcast=n2_send_broadcast,w01_pkt_valid_0=w20_pkt_valid_0,w01_pkt_type_0=w20_pkt_type_0,w01_pkt_seq_0=w20_pkt_seq_0,w01_pkt_round_0=w20_pkt_round_0,w01_pkt_cmd_ts_0=w20_pkt_cmd_ts_0,send_01_0=send_20_0,recv_01_0=recv_20_0,w01_pkt_valid_1=w20_pkt_valid_1,w01_pkt_type_1=w20_pkt_type_1,w01_pkt_seq_1=w20_pkt_seq_1,w01_pkt_round_1=w20_pkt_round_1,w01_pkt_cmd_ts_1=w20_pkt_cmd_ts_1,send_01_1=send_20_1,recv_01_1=recv_20_1,w01_pkt_valid_2=w20_pkt_valid_2,w01_pkt_type_2=w20_pkt_type_2,w01_pkt_seq_2=w20_pkt_seq_2,w01_pkt_round_2=w20_pkt_round_2,w01_pkt_cmd_ts_2=w20_pkt_cmd_ts_2,send_01_2=send_20_2,recv_01_2=recv_20_2,n0_send_ready=n2_send_ready,n0_send_is_broadcast=n2_send_is_broadcast,n0_send_type=n2_send_type,n0_send_seq=n2_send_seq,n0_send_round=n2_send_round,n0_send_cmd_ts=n2_send_cmd_ts] endmodule
     
module wire21 = wire01[n0_send_broadcast=n2_send_broadcast,w01_pkt_valid_0=w21_pkt_valid_0,w01_pkt_type_0=w21_pkt_type_0,w01_pkt_seq_0=w21_pkt_seq_0,w01_pkt_round_0=w21_pkt_round_0,w01_pkt_cmd_ts_0=w21_pkt_cmd_ts_0,send_01_0=send_21_0,recv_01_0=recv_21_0,w01_pkt_valid_1=w21_pkt_valid_1,w01_pkt_type_1=w21_pkt_type_1,w01_pkt_seq_1=w21_pkt_seq_1,w01_pkt_round_1=w21_pkt_round_1,w01_pkt_cmd_ts_1=w21_pkt_cmd_ts_1,send_01_1=send_21_1,recv_01_1=recv_21_1,w01_pkt_valid_2=w21_pkt_valid_2,w01_pkt_type_2=w21_pkt_type_2,w01_pkt_seq_2=w21_pkt_seq_2,w01_pkt_round_2=w21_pkt_round_2,w01_pkt_cmd_ts_2=w21_pkt_cmd_ts_2,send_01_2=send_21_2,recv_01_2=recv_21_2,n0_send_ready=n2_send_ready,n0_send_is_broadcast=n2_send_is_broadcast,n0_send_type=n2_send_type,n0_send_seq=n2_send_seq,n0_send_round=n2_send_round,n0_send_cmd_ts=n2_send_cmd_ts] endmodule
     
// rewards (to calculate expected number of steps)
rewards "steps"
    true : 1;
endrewards
label "n0_decided_log_seq0" = n0_log_ts_0 != INVALID;
label "n0_decided_log_seq0_non_bot" = n0_log_ts_0 != INVALID & n0_log_ts_0 != BOT;
label "n0_decided_log_seq1" = n0_log_ts_1 != INVALID;
label "n0_decided_log_seq1_non_bot" = n0_log_ts_1 != INVALID & n0_log_ts_1 != BOT;
label "n0_decided_log_seq2" = n0_log_ts_2 != INVALID;
label "n0_decided_log_seq2_non_bot" = n0_log_ts_2 != INVALID & n0_log_ts_2 != BOT;
label "n1_decided_log_seq0" = n1_log_ts_0 != INVALID;
label "n1_decided_log_seq0_non_bot" = n1_log_ts_0 != INVALID & n1_log_ts_0 != BOT;
label "n1_decided_log_seq1" = n1_log_ts_1 != INVALID;
label "n1_decided_log_seq1_non_bot" = n1_log_ts_1 != INVALID & n1_log_ts_1 != BOT;
label "n1_decided_log_seq2" = n1_log_ts_2 != INVALID;
label "n1_decided_log_seq2_non_bot" = n1_log_ts_2 != INVALID & n1_log_ts_2 != BOT;
label "n2_decided_log_seq0" = n2_log_ts_0 != INVALID;
label "n2_decided_log_seq0_non_bot" = n2_log_ts_0 != INVALID & n2_log_ts_0 != BOT;
label "n2_decided_log_seq1" = n2_log_ts_1 != INVALID;
label "n2_decided_log_seq1_non_bot" = n2_log_ts_1 != INVALID & n2_log_ts_1 != BOT;
label "n2_decided_log_seq2" = n2_log_ts_2 != INVALID;
label "n2_decided_log_seq2_non_bot" = n2_log_ts_2 != INVALID & n2_log_ts_2 != BOT;

